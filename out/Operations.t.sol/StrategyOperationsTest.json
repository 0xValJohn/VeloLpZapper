{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetFixtures",
      "outputs": [
        {
          "internalType": "address",
          "name": "_lpTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beefyVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yearnVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mooWhaleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isBoostedBool",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "beefyVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boost_zap_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isBoosted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "mooWhale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking_rewards_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_zap_lossless",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_zap_setup",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "yearnVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zapper",
      "outputs": [
        {
          "internalType": "contract MooVeloLpZapper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "671:1684:25:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;;;1594:4;1572:26;;;;;;3126:44:3;;;;;;;;;;773:31:26;;;-1:-1:-1;;;;;;773:31:26;;;;;;810:32;;;;;;;;;;;875:78;;;;;911:42;875:78;;;959:84;;;;;;1001:42;959:84;;;671:1684:25;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80638af02b6511620000f0578063ba414fa611620000a3578063e20c9f71116200007a578063e20c9f71146200042a578063e6ddadbf1462000434578063fa7626d41462000465578063fe0b6578146200047357600080fd5b8063ba414fa614620003a1578063beb57cdc14620003bc578063d0eae46114620003f357600080fd5b80638af02b651462000347578063916a17c6146200035b578063a6a1858f1462000365578063a7a217121462000379578063b4c6bfe1146200038d578063b5508aa9146200039757600080fd5b80633e5e3c2311620001665780634f8632ba116200013d5780634f8632ba14620002ca57806366d9a9a014620002de5780637a58eb8c14620002f757806385226c81146200032e57600080fd5b80633e5e3c2314620002805780633f7286f4146200028a5780634e9fea77146200029457600080fd5b80630a9254e414620001b45780630aa8e87314620001c057806312d43a5114620002175780631ed7831c14620002445780632ade3880146200025d57806334dfae8d1462000276575b600080fd5b620001be62000487565b005b620001d7620001d136600462001f54565b62000493565b604080516001600160a01b0396871681529486166020860152928516928401929092529092166060820152901515608082015260a0015b60405180910390f35b6022546200022b906001600160a01b031681565b6040516001600160a01b0390911681526020016200020e565b6200024e620004ea565b6040516200020e919062001f6e565b620002676200054e565b6040516200020e919062002011565b620001be6200069c565b6200024e62000776565b6200024e620007d8565b6200022b620002a5366004620020ed565b805160208183018101805182825292820191909301209152546001600160a01b031681565b6023546200022b906001600160a01b031681565b620002e86200083a565b6040516200020e9190620021a8565b6200022b62000308366004620020ed565b8051602081830181018051601f825292820191909301209152546001600160a01b031681565b6200033862000924565b6040516200020e91906200225f565b6026546200022b906001600160a01b031681565b620002e8620009fe565b6024546200022b906001600160a01b031681565b6027546200022b906001600160a01b031681565b620001be62000ae8565b6200033862000e4a565b620003ab62000f24565b60405190151581526020016200020e565b6200022b620003cd366004620020ed565b8051602081830181018051601d825292820191909301209152546001600160a01b031681565b6200022b62000404366004620020ed565b8051602081830181018051601e825292820191909301209152546001600160a01b031681565b6200024e6200105b565b620003ab62000445366004620020ed565b805160208183018101805160218252928201919093012091525460ff1681565b600754620003ab9060ff1681565b6025546200022b906001600160a01b031681565b62000491620010bd565b565b601c8181548110620004a457600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090821692821691811690600160a01b900460ff1685565b606060148054806020026020016040519081016040528092919081815260200182805480156200054457602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000525575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200069357600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200067b578382906000526020600020018054620005e790620022c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200061590620022c5565b8015620006665780601f106200063a5761010080835404028352916020019162000666565b820191906000526020600020905b8154815290600101906020018083116200064857829003601f168201915b505050505081526020019060010190620005c5565b50505050815250508152602001906001019062000572565b50505050905090565b60005b601c5460ff8216101562000773576000601c8260ff1681548110620006c857620006c862002301565b60009182526020918290206040805160a081018252600490930290910180546001600160a01b0390811680855260018301548216858701526002830154821685850152600390920154908116606085015260ff600160a01b90910416151560808401528151808301909252600c82526b2a32b9ba34b733903337b91d60a11b938201939093529092506200075d90826200170e565b5050806200076b906200232d565b90506200069f565b50565b6060601680548060200260200160405190810160405280929190818152602001828054801562000544576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000525575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000544576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000525575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620006935760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200090b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008cc5790505b505050505081525050815260200190600101906200085e565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620006935783829060005260206000200180546200096a90620022c5565b80601f01602080910402602001604051908101604052809291908181526020018280546200099890620022c5565b8015620009e95780601f10620009bd57610100808354040283529160200191620009e9565b820191906000526020600020905b815481529060010190602001808311620009cb57829003601f168201915b50505050508152602001906001019062000948565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620006935760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000acf57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000a905790505b5050505050815250508152602001906001019062000a22565b60005b601c5460ff8216101562000773576000601c8260ff168154811062000b145762000b1462002301565b600091825260208083206040805160a081018252600494850290920180546001600160a01b03908116808552600183015482168587018190526002840154831686860181905260039094015492831660608701819052600160a01b90930460ff161515608087018190528551631df1ee3f60e21b81529551969a50919890979396929591949093670de0b6b3a76400009389936377c7b8fc9380840193908290030181865afa15801562000bcc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf291906200234f565b6040516370a0823160e01b81526001600160a01b0386811660048301528816906370a0823190602401602060405180830381865afa15801562000c39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c5f91906200234f565b62000c6b919062002369565b62000c77919062002389565b6040516303223eab60e11b81526001600160a01b0385166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562000cd057600080fd5b505af115801562000ce5573d6000803e3d6000fd5b505060275462000d0792506001600160a01b038881169250166000196200175b565b60275460405163510a338360e01b81526001600160a01b0388811660048301529091169063510a338390602401600060405180830381600087803b15801562000d4f57600080fd5b505af115801562000d64573d6000803e3d6000fd5b50505050811562000dda57602660009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000dc057600080fd5b505af115801562000dd5573d6000803e3d6000fd5b505050505b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000e1657600080fd5b505af115801562000e2b573d6000803e3d6000fd5b50505050505050505050508062000e42906200232d565b905062000aeb565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200069357838290600052602060002001805462000e9090620022c5565b80601f016020809104026020016040519081016040528092919081815260200182805462000ebe90620022c5565b801562000f0f5780601f1062000ee35761010080835404028352916020019162000f0f565b820191906000526020600020905b81548152906001019060200180831162000ef157829003601f168201915b50505050508152602001906001019062000e6e565b600754600090610100900460ff161562000f475750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620010565760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000fd8917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620023ac565b60408051601f198184030181529082905262000ff491620023df565b6000604051808303816000865af19150503d806000811462001033576040519150601f19603f3d011682016040523d82523d6000602084013e62001038565b606091505b5091505080806020019051810190620010529190620023fd565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000544576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000525575050505050905090565b620010c7620018a3565b620010d1620019a2565b620010db62001a75565b620010e562001b48565b620010ef62001c1b565b6040805160a081018252600a60608201908152690c2d8cae8d0beeecae8d60b31b608083015281528151808301835260088152677374675f7573646360c01b60208281019190915280830191909152825180840184526009815268737573642d7573646360b81b9181019190915281830152602554915190916001600160a01b0316906200117d9062001f46565b6001600160a01b039091168152602001604051809103906000f080158015620011aa573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b03928316908117909155602254604051630ad3d58760e41b815292166004830152600160248301529063ad3d587090604401600060405180830381600087803b1580156200120d57600080fd5b505af115801562001222573d6000803e3d6000fd5b5050505060005b60038160ff1610156200155b576000828260ff166003811062001250576200125062002301565b60200201519050601c6040518060a00160405280601d84604051620012769190620023df565b9081526040805160209281900383019020546001600160a01b0316835251910190601e90620012a7908690620023df565b9081526040805160209281900383019020546001600160a01b0316835251910190601f90620012d8908690620023df565b9081526040805160209281900383019020546001600160a01b03168352519181019162001307908690620023df565b9081526040805160209281900383019020546001600160a01b031683525191019060219062001338908690620023df565b908152604080519182900360209081019092205460ff1615159092528354600180820186556000958652948290208451600492830290910180546001600160a01b039283166001600160a01b0319918216178255938601519681018054978316978516979097179096558484015160028701805491831691909416179092556060840151600390950180546080909501511515600160a01b026001600160a81b0319909516958316959095179390931790935560225490516303223eab60e11b8152921690820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200143a57600080fd5b505af11580156200144f573d6000803e3d6000fd5b50506027546040516001600160a01b03909116925063f1ec23cf9150601d906200147b908590620023df565b908152604051908190036020018120546001600160a01b031690601e90620014a5908690620023df565b908152604051908190036020018120546001600160a01b031690601f90620014cf908790620023df565b908152604051908190036020018120546001600160e01b031960e086901b1682526001600160a01b039384166004830152918316602482015291166044820152606401600060405180830381600087803b1580156200152d57600080fd5b505af115801562001542573d6000803e3d6000fd5b50505050508062001553906200232d565b905062001229565b50602254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526223b7bb60e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620015cf57600080fd5b505af1158015620015e4573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152632ab9b2b960e11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200166157600080fd5b505af115801562001676573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b0390921660048301529181019190915260056044820152645768616c6560d81b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620016f257600080fd5b505af115801562001707573d6000803e3d6000fd5b5050505050565b6200175782826040516024016200172792919062002421565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905262001cad565b5050565b801580620017d95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620017b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017d791906200234f565b155b6200184a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526200189e90849062001cb8565b505050565b73a1055762336f92b4b8d2edc032a0ce45ead6280a601d604051620018d890690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601d60088301819052905191829003602801822080547356770b94279539416855fe29ef14b26438b5e42194169390931790925568737573642d7573646360b81b8152736d5ba400640226e24b50214d2bbb3d4db8e6e15a91906009015b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055565b731a1f0db1050d1cad52eeb72371ebfd7716b53a2f601e604051620019d790690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601e600883018190529051918290036028018220805473d09b5a0650d68aae6b1666ee5e770a383d29a97c94169390931790925568737573642d7573646360b81b815273182fe51442c7d65360ed1511f30be6261c2c20c1919060090162001971565b73f7d66b41cd4241eae450fd9d2d6995754634d9f3601f60405162001aaa90690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601f600883018190529051918290036028018220805473f6b272134a193df5b04332e73184e5b40b8eb81094169390931790925568737573642d7573646360b81b8152731b1d2efb6045851f8ccde24369003e0ff157980b919060090162001971565b73c47fae56f3702737b69ed615950c01217ec5c7c8602060405162001b7d90690c2d8cae8d0beeecae8d60b31b8152600a0190565b90815260408051918290036020908101832080546001600160a01b03959095166001600160a01b0319958616179055677374675f7573646360c01b8352600883018190529051602892819003929092018220805490931673ed8886f9b87f06bf7ab1a4897881bd83ecf1f52e1790925568737573642d7573646360b81b8152728a74d96d799b0fcfae8462bfff8c37c7ccc611919060090162001971565b6001602160405162001c3d90690c2d8cae8d0beeecae8d60b31b8152600a0190565b90815260408051918290036020018220805493151560ff19948516179055677374675f7573646360c01b8252602160088301819052815192839003602801832080548516600117905568737573642d7573646360b81b835260098301525190819003602901902080549091169055565b620007738162001d91565b600062001d0f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662001db29092919063ffffffff16565b8051909150156200189e578080602001905181019062001d309190620023fd565b6200189e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162001841565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606062001dc3848460008562001dcd565b90505b9392505050565b60608247101562001e305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162001841565b6001600160a01b0385163b62001e895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162001841565b600080866001600160a01b0316858760405162001ea79190620023df565b60006040518083038185875af1925050503d806000811462001ee6576040519150601f19603f3d011682016040523d82523d6000602084013e62001eeb565b606091505b509150915062001efd82828662001f08565b979650505050505050565b6060831562001f1957508162001dc6565b82511562001f2a5782518084602001fd5b8160405162461bcd60e51b81526004016200184191906200244d565b6113d1806200246383390190565b60006020828403121562001f6757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101562001fb15783516001600160a01b03168352928401929184019160010162001f8a565b50909695505050505050565b60005b8381101562001fda57818101518382015260200162001fc0565b50506000910152565b6000815180845262001ffd81602086016020860162001fbd565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015620020c757603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620020b057605f198985030183526200209d84865162001fe3565b948e01949350918d01916001016200207e565b505050978a01979450509188019160010162002038565b50919a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200210057600080fd5b813567ffffffffffffffff808211156200211957600080fd5b818401915084601f8301126200212e57600080fd5b813581811115620021435762002143620020d7565b604051601f8201601f19908116603f011681019083821181831017156200216e576200216e620020d7565b816040528281528760208487010111156200218857600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200225057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156200223a5783516001600160e01b0319168252928b019260019290920191908b01906200220e565b50978a01979550505091870191600101620021d0565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620022b857603f19888603018452620022a585835162001fe3565b9450928501929085019060010162002286565b5092979650505050505050565b600181811c90821680620022da57607f821691505b602082108103620022fb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810362002346576200234662002317565b60010192915050565b6000602082840312156200236257600080fd5b5051919050565b808202811582820484141762002383576200238362002317565b92915050565b600082620023a757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b0319831681528151600090620023d181600485016020870162001fbd565b919091016004019392505050565b60008251620023f381846020870162001fbd565b9190910192915050565b6000602082840312156200241057600080fd5b8151801515811462001dc657600080fd5b60408152600062002436604083018562001fe3565b905060018060a01b03831660208301529392505050565b60208152600062001dc6602083018462001fe356fe608060405234801561001057600080fd5b506040516113d13803806113d183398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6112e5806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063d003d0f511610066578063d003d0f5146101af578063dc8dddf3146101c2578063f1ec23cf146101e5578063f2fde38b146101f857600080fd5b80638da5cb5b1461017a578063ad3d58701461018b578063c9e4f07a1461019e57600080fd5b806303d40513146100d45780631bb5e2dc14610104578063424351751461011757806343470f2a1461012c578063510a33831461015f578063715018a614610172575b600080fd5b6100e76100e23660046110df565b61020b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e761011236600461110b565b610239565b61012a610125366004611124565b610263565b005b61014f61013a366004611124565b60056020526000908152604090205460ff1681565b60405190151581526020016100fb565b61012a61016d366004611124565b6102bf565b61012a61083e565b6000546001600160a01b03166100e7565b61012a61019936600461114f565b610852565b6001546040519081526020016100fb565b6002546100e7906001600160a01b031681565b61014f6101d0366004611124565b60046020526000908152604090205460ff1681565b61012a6101f3366004611188565b6108bd565b61012a610206366004611124565b610b31565b6003602052816000526040600020816002811061022757600080fd5b01546001600160a01b03169150829050565b6001818154811061024957600080fd5b6000918252602090912001546001600160a01b0316905081565b61026b610baa565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fe0e7227de5ec204691b2be349b6bc66860230c83e2ae37bf1939ed8b01fc5b569060200160405180910390a150565b6001600160a01b0381166000908152600360205260408082208151808301928390529160029082845b81546001600160a01b031681526001909101906020018083116102e85750505050509050600081600060028110610321576103216111d3565b60200201519050600082600160200201516040516370a0823160e01b81523360048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a091906111e9565b84519091506103b0908483610c04565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190611202565b5083600060200201516001600160a01b031663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03881691506370a0823190602401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed91906111e9565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663f59e3de76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610568919061121f565b6020870151604051638dddb3e560e01b81526001600160a01b039182166004820152911690638dddb3e590602401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d7919061121f565b90506001600160a01b0381166107275760208601516105f7908884610c04565b85600160200201516001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03871691506370a0823190602401602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc91906111e9565b90506106d26001600160a01b0386163383610cad565b602080880151604080518481526000938101939093526001600160a01b039091169133917fe96c9e409dfdd43a71a9f555abb561716d5a3b7cb5503aef39c3b19e435638bc910160405180910390a350610835565b60025461073e906001600160a01b03168884610c04565b60025460208701516040516001600160a01b039182166024820152604481018590526000928392169060640160408051601f198184030181529181526020820180516001600160e01b0316636d6a66a960e11b1790525161079f9190611260565b600060405180830381855af49150503d80600081146107da576040519150601f19603f3d011682016040523d82523d6000602084013e6107df565b606091505b5060208a8101516040805189815260019381019390935280519496509294506001600160a01b03169233927fe96c9e409dfdd43a71a9f555abb561716d5a3b7cb5503aef39c3b19e435638bc928290030190a350505b50505050505050565b610846610baa565b6108506000610d10565b565b61085a610baa565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527f76b0b705fe5def0b2d1a1c29a7b39c0d71d957ff92b1cbfc130a3d834af95710910160405180910390a15050565b3360009081526004602052604090205460ff166109105760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b806001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610972919061121f565b6001600160a01b0316826001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd919061121f565b6001600160a01b031614610a335760405162461bcd60e51b815260206004820152601760248201527f6c7020746f6b656e20646f6573206e6f74206d617463680000000000000000006044820152606401610907565b6001600160a01b03838116600090815260036020908152604080832080546001600160a01b0319908116888716178255600190910180549091169486169490941790935560059052205460ff16610ae5576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386169081179091556000908152600560205260409020805460ff191690911790555b604080516001600160a01b03848116825283811660208301528516917f7f46075c67ca5bbd3aaf82d8e324282141f27b7cba3376e5498a6b70c9931c2a910160405180910390a2505050565b610b39610baa565b6001600160a01b038116610b9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610907565b610ba781610d10565b50565b6000546001600160a01b031633146108505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610907565b604051636eb1769f60e11b81523060048201526001600160a01b03848116602483015282919084169063dd62ed3e90604401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7791906111e9565b1015610ca857610c926001600160a01b038316846000610d60565b610ca86001600160a01b03831684600019610d60565b505050565b6040516001600160a01b038316602482015260448101829052610ca890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e75565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801580610dda5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd891906111e9565b155b610e455760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610907565b6040516001600160a01b038316602482015260448101829052610ca890849063095ea7b360e01b90606401610cd9565b6000610eca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f479092919063ffffffff16565b805190915015610ca85780806020019051810190610ee89190611202565b610ca85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610907565b6060610f568484600085610f60565b90505b9392505050565b606082471015610fc15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610907565b6001600160a01b0385163b6110185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610907565b600080866001600160a01b031685876040516110349190611260565b60006040518083038185875af1925050503d8060008114611071576040519150601f19603f3d011682016040523d82523d6000602084013e611076565b606091505b5091509150611086828286611091565b979650505050505050565b606083156110a0575081610f59565b8251156110b05782518084602001fd5b8160405162461bcd60e51b8152600401610907919061127c565b6001600160a01b0381168114610ba757600080fd5b600080604083850312156110f257600080fd5b82356110fd816110ca565b946020939093013593505050565b60006020828403121561111d57600080fd5b5035919050565b60006020828403121561113657600080fd5b8135610f59816110ca565b8015158114610ba757600080fd5b6000806040838503121561116257600080fd5b823561116d816110ca565b9150602083013561117d81611141565b809150509250929050565b60008060006060848603121561119d57600080fd5b83356111a8816110ca565b925060208401356111b8816110ca565b915060408401356111c8816110ca565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111fb57600080fd5b5051919050565b60006020828403121561121457600080fd5b8151610f5981611141565b60006020828403121561123157600080fd5b8151610f59816110ca565b60005b8381101561125757818101518382015260200161123f565b50506000910152565b6000825161127281846020870161123c565b9190910192915050565b602081526000825180602084015261129b81604085016020870161123c565b601f01601f1916919091016040019291505056fea26469706673582212208c1a5729c1474e9e23ed178cd05bce03778e7ecc94d6c0bfeb598ad80f41e64564736f6c63430008150033a26469706673582212208b5af02cd1f3a71bf0a35d097d30968f9f77b2c390b6d99c044bc46510f5b99264736f6c63430008150033",
    "sourceMap": "671:1684:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:63;;;:::i;:::-;;489:35:26;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;508:15:27;;;490:34;;560:15;;;555:2;540:18;;533:43;612:15;;;592:18;;;585:43;;;;664:15;;;659:2;644:18;;637:43;724:14;;717:22;711:3;696:19;;689:51;439:3;424:19;489:35:26;;;;;;;;773:31;;;;;-1:-1:-1;;;;;773:31:26;;;;;;-1:-1:-1;;;;;915:32:27;;;897:51;;885:2;870:18;773:31:26;751:203:27;2452:134:6;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;:::i;:::-;;;;;;;:::i;833:292:25:-;;;:::i;3221:133:6:-;;;:::i;2922:141::-;;;:::i;678:42:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;678:42:26;;;810:32;;;;;-1:-1:-1;;;;;810:32:26;;;2738:178:6;;;:::i;:::-;;;;;;;:::i;628:44:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;628:44:26;;;2592:140:6;;;:::i;:::-;;;;;;;:::i;959:84:26:-;;;;;-1:-1:-1;;;;;959:84:26;;;3069:146:6;;;:::i;848:20:26:-;;;;;-1:-1:-1;;;;;848:20:26;;;1050:29;;;;;-1:-1:-1;;;;;1050:29:26;;;1131:1222:25;;;:::i;2157:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;7737:14:27;;7730:22;7712:41;;7700:2;7685:18;1819:584:0;7572:187:27;531:41:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:41:26;;;578:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;578:44:26;;;2304:142:6;;;:::i;726:40:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:26:0;;;;;;;;;875:78:26;;;;;-1:-1:-1;;;;;875:78:26;;;760:63:25;803:13;:11;:13::i;:::-;760:63::o;489:35:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:35:26;;;;-1:-1:-1;489:35:26;;;;;;;;;;-1:-1:-1;;;489:35:26;;;;;:::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;833:292:25:-;886:7;881:238;903:13;:20;899:24;;;;881:238;;;944:33;980:13;994:1;980:16;;;;;;;;;;:::i;:::-;;;;;;;;;;944:52;;;;;;;;980:16;;;;;;;944:52;;-1:-1:-1;;;;;944:52:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;944:52:25;;;;;;;;;;1071:37;;;;;;;;;;;-1:-1:-1;;;1071:37:25;;;;;;;944:52;;-1:-1:-1;1071:37:25;;944:52;1071:12;:37::i;:::-;930:189;;925:3;;;;:::i;:::-;;;881:238;;;;833:292::o;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1131:1222:25;1182:7;1177:1170;1199:13;:20;1195:24;;;;1177:1170;;;1240:33;1276:13;1290:1;1276:16;;;;;;;;;;:::i;:::-;;;;;;;;;1240:52;;;;;;;;1276:16;;;;;;;1240:52;;-1:-1:-1;;;;;1240:52:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1240:52:25;;;;;;;;;;;;;1695:47;;-1:-1:-1;;;1695:47:25;;;;1240:52;;-1:-1:-1;1240:52:25;;;;;;;;;;1276:16;;1745:4;;1240:52;;1695:45;;:47;;;;;;;;;;1240:52;1695:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1652:40;;-1:-1:-1;;;1652:40:25;;-1:-1:-1;;;;;915:32:27;;;1652:40:25;;;897:51:27;1652:29:25;;;;;870:18:27;;1652:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:90;;;;:::i;:::-;:97;;;;:::i;:::-;1763:24;;-1:-1:-1;;;1763:24:25;;-1:-1:-1;;;;;915:32:27;;1763:24:25;;;897:51:27;1629:120:25;;-1:-1:-1;1763:13:25;;;;870:18:27;;1763:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1841:6:25;;1801:67;;-1:-1:-1;;;;;;1801:31:25;;;;-1:-1:-1;1841:6:25;-1:-1:-1;;1801:31:25;:67::i;:::-;1882:6;;:20;;-1:-1:-1;;;1882:20:25;;-1:-1:-1;;;;;915:32:27;;;1882:20:25;;;897:51:27;1882:6:25;;;;:10;;870:18:27;;1882:20:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:10;1917:97;;;1967:24;;;;;;;;;-1:-1:-1;;;;;1967:24:25;-1:-1:-1;;;;;1951:46:25;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:97;2040:11;-1:-1:-1;;;;;2028:33:25;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:1121;;;;;;;1221:3;;;;:::i;:::-;;;1177:1170;;2157:141:6;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;9351:51:27;;;-1:-1:-1;;;9418:18:27;;;9411:34;2196:43:0;;;;;;;;;9324:18:27;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;1086:875:26:-;1128:13;:11;:13::i;:::-;1151:16;:14;:16::i;:::-;1177;:14;:16::i;:::-;1203:14;:12;:14::i;:::-;1227:15;:13;:15::i;:::-;1261:71;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;-1:-1:-1;;;1261:71:26;1372:18;;1352:39;;1261:71;;-1:-1:-1;;;;;1372:18:26;;1352:39;;;:::i;:::-;-1:-1:-1;;;;;915:32:27;;;897:51;;885:2;870:18;1352:39:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1343:6:26;:48;;-1:-1:-1;;;;;;1343:48:26;-1:-1:-1;;;;;1343:48:26;;;;;;;;;1424:3;;1401:33;;-1:-1:-1;;;1401:33:26;;1424:3;;1401:33;;;10587:51:27;-1:-1:-1;10654:18:27;;;10647:50;1343:48:26;1401:22;;10560:18:27;;1401:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:7;1445:413;1467:19;1463:1;:23;;;1445:413;;;1507:25;1535:12;1548:1;1535:15;;;;;;;;;:::i;:::-;;;;;1507:43;;1564:13;1583:131;;;;;;;;1596:7;1604:11;1596:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1596:20:26;1583:131;;1618:23;1583:131;;;1618:10;;:23;;1629:11;;1618:23;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:23:26;1583:131;;1643:23;1583:131;;;1643:10;;:23;;1654:11;;1643:23;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1643:23:26;1583:131;;1668:21;1583:131;;;;1668:21;;1677:11;;1668:21;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1668:21:26;1583:131;;1691:22;1583:131;;;1691:9;;:22;;1701:11;;1691:22;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1583:131;;;;;1564:151;;1691:22;1564:151;;;;;-1:-1:-1;1564:151:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1564:151:26;;;-1:-1:-1;;;;;;1564:151:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1564:151:26;-1:-1:-1;;;;;;1564:151:26;;;;;;;;;;;;;;;;;1743:3;;1729:18;;-1:-1:-1;;;1729:18:26;;1743:3;;1729:18;;;897:51:27;1729:13:26;;;;870:18:27;;1729::26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1761:6:26;;1776:20;;-1:-1:-1;;;;;1761:6:26;;;;-1:-1:-1;1761:14:26;;-1:-1:-1;1776:7:26;;:20;;1784:11;;1776:20;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1776:20:26;;1798:10;;:23;;1809:11;;1798:23;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1798:23:26;;1823:10;;:23;;1834:11;;1823:23;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1761:86:26;;;;;;;-1:-1:-1;;;;;11260:15:27;;;1761:86:26;;;11242:34:27;11312:15;;;11292:18;;;11285:43;1823:23:26;;11344:18:27;;;11337:43;11177:18;;1761:86:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:365;1488:3;;;;:::i;:::-;;;1445:413;;;-1:-1:-1;1877:3:26;;1868:20;;;-1:-1:-1;;;1868:20:26;;-1:-1:-1;;;;;1877:3:26;;;1868:20;;;11603:51:27;11670:18;;;11663:30;11729:1;11709:18;;;11702:29;-1:-1:-1;;;11747:18:27;;;11740:33;1868:8:26;;;;11790:19:27;;1868:20:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1907:4:26;;1898:22;;;-1:-1:-1;;;1898:22:26;;-1:-1:-1;;;;;1907:4:26;;;1898:22;;;;12032:51:27;;;;12099:18;;;12092:30;;;;12138:18;;;12131:29;-1:-1:-1;;;12176:18:27;;;12169:34;1898:8:26;;-1:-1:-1;1898:8:26;;-1:-1:-1;12220:19:27;;1898:22:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1939:5:26;;;1930:24;;;-1:-1:-1;;;1930:24:26;;-1:-1:-1;;;;;1939:5:26;;;1930:24;;;12462:51:27;12529:18;;;12522:30;;;;12588:1;12568:18;;;12561:29;-1:-1:-1;;;12606:18:27;;;12599:35;1930:8:26;;-1:-1:-1;1930:8:26;;-1:-1:-1;12651:19:27;;1930:24:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:843;1086:875::o;8147:145:15:-;8214:71;8277:2;8281;8230:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8230:54:15;;;;;;;;;;;;;;-1:-1:-1;;;;;8230:54:15;-1:-1:-1;;;8230:54:15;;;8214:15;:71::i;:::-;8147:145;;:::o;1475:603:21:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:21;;-1:-1:-1;;;1846:39:21;;1870:4;1846:39;;;13215:34:27;-1:-1:-1;;;;;13285:15:27;;;13265:18;;;13258:43;1846:15:21;;;;;13150:18:27;;1846:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:21;;13514:2:27;1808:163:21;;;13496:21:27;13553:2;13533:18;;;13526:30;13592:34;13572:18;;;13565:62;-1:-1:-1;;;13643:18:27;;;13636:52;13705:19;;1808:163:21;;;;;;;;;2008:62;;;-1:-1:-1;;;;;9369:32:27;;2008:62:21;;;9351:51:27;9418:18;;;;9411:34;;;2008:62:21;;;;;;;;;;9324:18:27;;;;2008:62:21;;;;;;;;-1:-1:-1;;;;;2008:62:21;-1:-1:-1;;;2008:62:21;;;1981:90;;2001:5;;1981:19;:90::i;:::-;1475:603;;;:::o;1967:318:26:-;2033:42;2009:7;:21;;;;-1:-1:-1;;;14216:25:27;;14266:2;14257:12;;14014:261;2009:21:26;;;;;;;;;;;;;;;:66;;-1:-1:-1;;;;;2009:66:26;;;;-1:-1:-1;;;;;;2009:66:26;;;;;;-1:-1:-1;;;14482:23:27;;2085:7:26;14530:1:27;14521:11;;2085:19:26;;;;;;;;;;;;;:64;;2107:42;2085:64;;;;;;;;;-1:-1:-1;;;14745:24:27;;2182:42:26;;2085:7;14794:1:27;14785:11;2159:20:26;;;;;;;;;;;;;;:65;;-1:-1:-1;;;;;2159:65:26;;;;-1:-1:-1;;;;;;2159:65:26;;;;;;;;;1967:318::o;2291:336::-;2363:42;2336:10;:24;;;;-1:-1:-1;;;14216:25:27;;14266:2;14257:12;;14014:261;2336:24:26;;;;;;;;;;;;;;;:69;;-1:-1:-1;;;;;2336:69:26;;;;-1:-1:-1;;;;;;2336:69:26;;;;;;-1:-1:-1;;;14482:23:27;;2415:10:26;14530:1:27;14521:11;;2415:22:26;;;;;;;;;;;;;:67;;2440:42;2415:67;;;;;;;;;-1:-1:-1;;;14745:24:27;;2518:42:26;;2415:10;14794:1:27;14785:11;2492:23:26;14543:259:27;2633:336:26;2705:42;2678:10;:24;;;;-1:-1:-1;;;14216:25:27;;14266:2;14257:12;;14014:261;2678:24:26;;;;;;;;;;;;;;;:69;;-1:-1:-1;;;;;2678:69:26;;;;-1:-1:-1;;;;;;2678:69:26;;;;;;-1:-1:-1;;;14482:23:27;;2757:10:26;14530:1:27;14521:11;;2757:22:26;;;;;;;;;;;;;:67;;2782:42;2757:67;;;;;;;;;-1:-1:-1;;;14745:24:27;;2860:42:26;;2757:10;14794:1:27;14785:11;2834:23:26;14543:259:27;2975:330:26;3043:42;3018:8;:22;;;;-1:-1:-1;;;14216:25:27;;14266:2;14257:12;;14014:261;3018:22:26;;;;;;;;;;;;;;;;;:67;;-1:-1:-1;;;;;3018:67:26;;;;-1:-1:-1;;;;;;3018:67:26;;;;;;-1:-1:-1;;;14482:23:27;;14530:1;14521:11;;3095:20:26;;;;;;;;;;;;;;;;:65;;;;;3118:42;3095:65;;;;-1:-1:-1;;;14745:24:27;;3197:42:26;;3018:22;14794:1:27;14785:11;3173:21:26;14543:259:27;3311:221:26;3381:4;3355:9;:23;;;;-1:-1:-1;;;14216:25:27;;14266:2;14257:12;;14014:261;3355:23:26;;;;;;;;;;;;;;;:30;;;;;-1:-1:-1;;3355:30:26;;;;;;-1:-1:-1;;;14482:23:27;;3395:9:26;14530:1:27;14521:11;;3395:21:26;;;;;;;;;;;;;:28;;;;-1:-1:-1;3395:28:26;;;-1:-1:-1;;;14745:24:27;;14794:1;14785:11;;3436:22:26;;;;;;;;;;:30;;;;;;;3311:221::o;868:133:15:-;939:55;986:7;965:19;939:55::i;3747:706:21:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:21;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:21;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:21;;15009:2:27;4351:85:21;;;14991:21:27;15048:2;15028:18;;;15021:30;15087:34;15067:18;;;15060:62;-1:-1:-1;;;15138:18:27;;;15131:40;15188:19;;4351:85:21;14807:406:27;1007:380:15;1105:14;;591:42;1278:2;1265:16;;1081:21;;1105:14;1265:16;591:42;1314:5;1303:68;1294:77;;1231:150;;1007:380;:::o;3861:223:22:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:22;;15420:2:27;5137:81:22;;;15402:21:27;15459:2;15439:18;;;15432:30;15498:34;15478:18;;;15471:62;-1:-1:-1;;;15549:18:27;;;15542:36;15595:19;;5137:81:22;15218:402:27;5137:81:22;-1:-1:-1;;;;;1465:19:22;;;5228:60;;;;-1:-1:-1;;;5228:60:22;;15827:2:27;5228:60:22;;;15809:21:27;15866:2;15846:18;;;15839:30;15905:31;15885:18;;;15878:59;15954:18;;5228:60:22;15625:353:27;5228:60:22;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:22;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:22:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:22;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:22;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:180:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;959:658::-;1130:2;1182:21;;;1252:13;;1155:18;;;1274:22;;;1101:4;;1130:2;1353:15;;;;1327:2;1312:18;;;1101:4;1396:195;1410:6;1407:1;1404:13;1396:195;;;1475:13;;-1:-1:-1;;;;;1471:39:27;1459:52;;1566:15;;;;1531:12;;;;1507:1;1425:9;1396:195;;;-1:-1:-1;1608:3:27;;959:658;-1:-1:-1;;;;;;959:658:27:o;1622:250::-;1707:1;1717:113;1731:6;1728:1;1725:13;1717:113;;;1807:11;;;1801:18;1788:11;;;1781:39;1753:2;1746:10;1717:113;;;-1:-1:-1;;1864:1:27;1846:16;;1839:27;1622:250::o;1877:271::-;1919:3;1957:5;1951:12;1984:6;1979:3;1972:19;2000:76;2069:6;2062:4;2057:3;2053:14;2046:4;2039:5;2035:16;2000:76;:::i;:::-;2130:2;2109:15;-1:-1:-1;;2105:29:27;2096:39;;;;2137:4;2092:50;;1877:271;-1:-1:-1;;1877:271:27:o;2153:1742::-;2386:2;2438:21;;;2508:13;;2411:18;;;2530:22;;;2357:4;;2386:2;2571;;2589:18;;;;2626:1;2669:15;;;2654:31;;2650:40;;2713:15;;;2357:4;;2777:1089;2793:6;2788:3;2785:15;2777:1089;;;-1:-1:-1;;2862:22:27;;;2858:36;2846:49;;2918:13;;3005:9;;-1:-1:-1;;;;;3001:35:27;2986:51;;3076:11;;3070:18;3108:15;;;3101:27;;;3189:19;;2958:15;;;3221:24;;;3402:21;;;;3268:2;3350:17;;;3338:30;;3334:39;;;3292:15;;;;3447:1;3461:296;3477:8;3472:3;3469:17;3461:296;;;3583:2;3579:7;3570:6;3562;3558:19;3554:33;3547:5;3540:48;3615:42;3650:6;3639:8;3633:15;3615:42;:::i;:::-;3686:17;;;;3605:52;-1:-1:-1;3729:14:27;;;;3505:1;3496:11;3461:296;;;-1:-1:-1;;;3844:12:27;;;;3780:6;-1:-1:-1;;3809:15:27;;;;2819:1;2810:11;2777:1089;;;-1:-1:-1;3883:6:27;;2153:1742;-1:-1:-1;;;;;;;;;;2153:1742:27:o;3900:127::-;3961:10;3956:3;3952:20;3949:1;3942:31;3992:4;3989:1;3982:15;4016:4;4013:1;4006:15;4032:922;4101:6;4154:2;4142:9;4133:7;4129:23;4125:32;4122:52;;;4170:1;4167;4160:12;4122:52;4210:9;4197:23;4239:18;4280:2;4272:6;4269:14;4266:34;;;4296:1;4293;4286:12;4266:34;4334:6;4323:9;4319:22;4309:32;;4379:7;4372:4;4368:2;4364:13;4360:27;4350:55;;4401:1;4398;4391:12;4350:55;4437:2;4424:16;4459:2;4455;4452:10;4449:36;;;4465:18;;:::i;:::-;4540:2;4534:9;4508:2;4594:13;;-1:-1:-1;;4590:22:27;;;4614:2;4586:31;4582:40;4570:53;;;4638:18;;;4658:22;;;4635:46;4632:72;;;4684:18;;:::i;:::-;4724:10;4720:2;4713:22;4759:2;4751:6;4744:18;4799:7;4794:2;4789;4785;4781:11;4777:20;4774:33;4771:53;;;4820:1;4817;4810:12;4771:53;4876:2;4871;4867;4863:11;4858:2;4850:6;4846:15;4833:46;4921:1;4899:15;;;4916:2;4895:24;4888:35;;;;-1:-1:-1;4903:6:27;4032:922;-1:-1:-1;;;;;4032:922:27:o;4959:1567::-;5161:4;5190:2;5230;5219:9;5215:18;5260:2;5249:9;5242:21;5283:6;5318;5312:13;5349:6;5341;5334:22;5375:2;5365:12;;5408:2;5397:9;5393:18;5386:25;;5470:2;5460:6;5457:1;5453:14;5442:9;5438:30;5434:39;5508:2;5500:6;5496:15;5529:1;5550;5560:937;5576:6;5571:3;5568:15;5560:937;;;5645:22;;;-1:-1:-1;;5641:36:27;5629:49;;5701:13;;5788:9;;-1:-1:-1;;;;;5784:35:27;5769:51;;5859:11;;5853:18;5891:15;;;5884:27;;;5972:19;;5741:15;;;6004:24;;;6094:21;;;;6139:1;;6062:2;6050:15;;;6153:236;6169:8;6164:3;6161:17;6153:236;;;6250:15;;-1:-1:-1;;;;;;6246:42:27;6232:57;;6358:17;;;;6197:1;6188:11;;;;;6315:14;;;;6153:236;;;-1:-1:-1;6475:12:27;;;;6412:5;-1:-1:-1;;;6440:15:27;;;;5602:1;5593:11;5560:937;;;-1:-1:-1;6514:6:27;;4959:1567;-1:-1:-1;;;;;;;;;4959:1567:27:o;6531:803::-;6693:4;6722:2;6762;6751:9;6747:18;6792:2;6781:9;6774:21;6815:6;6850;6844:13;6881:6;6873;6866:22;6919:2;6908:9;6904:18;6897:25;;6981:2;6971:6;6968:1;6964:14;6953:9;6949:30;6945:39;6931:53;;7019:2;7011:6;7007:15;7040:1;7050:255;7064:6;7061:1;7058:13;7050:255;;;7157:2;7153:7;7141:9;7133:6;7129:22;7125:36;7120:3;7113:49;7185:40;7218:6;7209;7203:13;7185:40;:::i;:::-;7175:50;-1:-1:-1;7283:12:27;;;;7248:15;;;;7086:1;7079:9;7050:255;;;-1:-1:-1;7322:6:27;;6531:803;-1:-1:-1;;;;;;;6531:803:27:o;7764:380::-;7843:1;7839:12;;;;7886;;;7907:61;;7961:4;7953:6;7949:17;7939:27;;7907:61;8014:2;8006:6;8003:14;7983:18;7980:38;7977:161;;8060:10;8055:3;8051:20;8048:1;8041:31;8095:4;8092:1;8085:15;8123:4;8120:1;8113:15;7977:161;;7764:380;;;:::o;8149:127::-;8210:10;8205:3;8201:20;8198:1;8191:31;8241:4;8238:1;8231:15;8265:4;8262:1;8255:15;8281:127;8342:10;8337:3;8333:20;8330:1;8323:31;8373:4;8370:1;8363:15;8397:4;8394:1;8387:15;8413:175;8450:3;8494:4;8487:5;8483:16;8523:4;8514:7;8511:17;8508:43;;8531:18;;:::i;:::-;8580:1;8567:15;;8413:175;-1:-1:-1;;8413:175:27:o;8593:184::-;8663:6;8716:2;8704:9;8695:7;8691:23;8687:32;8684:52;;;8732:1;8729;8722:12;8684:52;-1:-1:-1;8755:16:27;;8593:184;-1:-1:-1;8593:184:27:o;8782:168::-;8855:9;;;8886;;8903:15;;;8897:22;;8883:37;8873:71;;8924:18;;:::i;:::-;8782:168;;;;:::o;8955:217::-;8995:1;9021;9011:132;;9065:10;9060:3;9056:20;9053:1;9046:31;9100:4;9097:1;9090:15;9128:4;9125:1;9118:15;9011:132;-1:-1:-1;9157:9:27;;8955:217::o;9456:384::-;-1:-1:-1;;;;;;9641:33:27;;9629:46;;9698:13;;9611:3;;9720:74;9698:13;9783:1;9774:11;;9767:4;9755:17;;9720:74;:::i;:::-;9814:16;;;;9832:1;9810:24;;9456:384;-1:-1:-1;;;9456:384:27:o;9845:287::-;9974:3;10012:6;10006:13;10028:66;10087:6;10082:3;10075:4;10067:6;10063:17;10028:66;:::i;:::-;10110:16;;;;;9845:287;-1:-1:-1;;9845:287:27:o;10137:277::-;10204:6;10257:2;10245:9;10236:7;10232:23;10228:32;10225:52;;;10273:1;10270;10263:12;10225:52;10305:9;10299:16;10358:5;10351:13;10344:21;10337:5;10334:32;10324:60;;10380:1;10377;10370:12;12681:317;12858:2;12847:9;12840:21;12821:4;12878:45;12919:2;12908:9;12904:18;12896:6;12878:45;:::i;:::-;12870:53;;12988:1;12984;12979:3;12975:11;12971:19;12963:6;12959:32;12954:2;12943:9;12939:18;12932:60;12681:317;;;;;:::o;15983:220::-;16132:2;16121:9;16114:21;16095:4;16152:45;16193:2;16182:9;16178:18;16170:6;16152:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "assetFixtures(uint256)": "0aa8e873",
    "beefyVault(string)": "d0eae461",
    "boost_zap_contract()": "fe0b6578",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "gov()": "12d43a51",
    "isBoosted(string)": "e6ddadbf",
    "lpToken(string)": "beb57cdc",
    "mooWhale(string)": "4e9fea77",
    "setUp()": "0a9254e4",
    "staking_rewards_contract()": "8af02b65",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_zap_lossless()": "b4c6bfe1",
    "test_zap_setup()": "34dfae8d",
    "user()": "4f8632ba",
    "whale()": "a6a1858f",
    "yearnVault(string)": "7a58eb8c",
    "zapper()": "a7a21712"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetFixtures\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_lpTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beefyVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yearnVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mooWhaleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBoostedBool\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"beefyVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boost_zap_contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isBoosted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mooWhale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking_rewards_contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_zap_lossless\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_zap_setup\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"yearnVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zapper\",\"outputs\":[{\"internalType\":\"contract MooVeloLpZapper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Operations.t.sol\":\"StrategyOperationsTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/MooVeloLpZapper.sol\":{\"keccak256\":\"0x5b5375ab406149bba47c4932762fdba916fcd2859040b2e6a1b2f75cb7e3566a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://74925361b980e8feb2b8026c5aec79ea8a991e5f0afef80180242d04c604862b\",\"dweb:/ipfs/QmdJWBFwPmDFEQXRTvsKcMnzz3Sf2T7YkpNafom9cQT7eM\"]},\"test/Operations.t.sol\":{\"keccak256\":\"0x0b51549881e2a8ab3b26b99e76fe2936acfc5dbd37a2bfe97cc8c79c42e4b21a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6b1b7626602e787d4a8afe39eea553206423556e0955ba719564b4ef1e15489d\",\"dweb:/ipfs/QmQT9owVLjhr2ndDFoNgmfFegicMqDxkHSitQUgjkXjSBj\"]},\"test/utils/StrategyFixture.sol\":{\"keccak256\":\"0x3339892ef26ab4b1516fe344a5d5b2daf15ee4e1b161d069549e1a8c0f5e05d3\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://514ce79e168ec1db9fd37158c5e0120c037a17a52e32648566f849aaafa947ae\",\"dweb:/ipfs/Qmayme2CGSg63YNHNHDBxboYW4uGZmuvUXyFixvg9XWMLU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetFixtures",
          "outputs": [
            {
              "internalType": "address",
              "name": "_lpTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_beefyVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_yearnVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_mooWhaleAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isBoostedBool",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beefyVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "boost_zap_contract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gov",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBoosted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mooWhale",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staking_rewards_contract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_zap_lossless"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_zap_setup"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whale",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "yearnVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "zapper",
          "outputs": [
            {
              "internalType": "contract MooVeloLpZapper",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Operations.t.sol": "StrategyOperationsTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/MooVeloLpZapper.sol": {
        "keccak256": "0x5b5375ab406149bba47c4932762fdba916fcd2859040b2e6a1b2f75cb7e3566a",
        "urls": [
          "bzz-raw://74925361b980e8feb2b8026c5aec79ea8a991e5f0afef80180242d04c604862b",
          "dweb:/ipfs/QmdJWBFwPmDFEQXRTvsKcMnzz3Sf2T7YkpNafom9cQT7eM"
        ],
        "license": "AGPL-3.0"
      },
      "test/Operations.t.sol": {
        "keccak256": "0x0b51549881e2a8ab3b26b99e76fe2936acfc5dbd37a2bfe97cc8c79c42e4b21a",
        "urls": [
          "bzz-raw://6b1b7626602e787d4a8afe39eea553206423556e0955ba719564b4ef1e15489d",
          "dweb:/ipfs/QmQT9owVLjhr2ndDFoNgmfFegicMqDxkHSitQUgjkXjSBj"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/StrategyFixture.sol": {
        "keccak256": "0x3339892ef26ab4b1516fe344a5d5b2daf15ee4e1b161d069549e1a8c0f5e05d3",
        "urls": [
          "bzz-raw://514ce79e168ec1db9fd37158c5e0120c037a17a52e32648566f849aaafa947ae",
          "dweb:/ipfs/Qmayme2CGSg63YNHNHDBxboYW4uGZmuvUXyFixvg9XWMLU"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Operations.t.sol",
    "id": 44869,
    "exportedSymbols": {
      "Address": [
        44151
      ],
      "IBeefyVault": [
        44699
      ],
      "IERC20": [
        43539
      ],
      "IERC20Permit": [
        43575
      ],
      "IStakingRewards": [
        44707
      ],
      "IYearnVault": [
        44703
      ],
      "MooVeloLpZapper": [
        44677
      ],
      "SafeERC20": [
        43856
      ],
      "StrategyFixture": [
        45174
      ],
      "StrategyOperationsTest": [
        44868
      ],
      "Test": [
        12215
      ],
      "console2": [
        30110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2317:25",
    "nodes": [
      {
        "id": 44679,
        "nodeType": "PragmaDirective",
        "src": "39:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 44682,
        "nodeType": "ImportDirective",
        "src": "65:50:25",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44680,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "73:4:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44681,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "79:8:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44684,
        "nodeType": "ImportDirective",
        "src": "116:59:25",
        "nodes": [],
        "absolutePath": "src/MooVeloLpZapper.sol",
        "file": "../src/MooVeloLpZapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 44678,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44683,
              "name": "MooVeloLpZapper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44677,
              "src": "124:15:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44685,
        "nodeType": "ImportDirective",
        "src": "176:75:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 43540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44686,
        "nodeType": "ImportDirective",
        "src": "252:84:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 43857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44688,
        "nodeType": "ImportDirective",
        "src": "337:60:25",
        "nodes": [],
        "absolutePath": "test/utils/StrategyFixture.sol",
        "file": "./utils/StrategyFixture.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 45175,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44687,
              "name": "StrategyFixture",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45174,
              "src": "345:15:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44699,
        "nodeType": "ContractDefinition",
        "src": "400:147:25",
        "nodes": [
          {
            "id": 44693,
            "nodeType": "FunctionDefinition",
            "src": "428:48:25",
            "nodes": [],
            "functionSelector": "1f1fcd51",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "want",
            "nameLocation": "437:4:25",
            "parameters": {
              "id": 44689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "441:2:25"
            },
            "returnParameters": {
              "id": 44692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44693,
                  "src": "467:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "466:9:25"
            },
            "scope": 44699,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44698,
            "nodeType": "FunctionDefinition",
            "src": "481:64:25",
            "nodes": [],
            "functionSelector": "77c7b8fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nameLocation": "490:20:25",
            "parameters": {
              "id": 44694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:25"
            },
            "returnParameters": {
              "id": 44697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44698,
                  "src": "536:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:9:25"
            },
            "scope": 44699,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeefyVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44699
        ],
        "name": "IBeefyVault",
        "nameLocation": "410:11:25",
        "scope": 44869,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44703,
        "nodeType": "ContractDefinition",
        "src": "549:59:25",
        "nodes": [
          {
            "id": 44702,
            "nodeType": "FunctionDefinition",
            "src": "577:29:25",
            "nodes": [],
            "functionSelector": "3ccfd60b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "586:8:25",
            "parameters": {
              "id": 44700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "594:2:25"
            },
            "returnParameters": {
              "id": 44701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:0:25"
            },
            "scope": 44703,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IYearnVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44703
        ],
        "name": "IYearnVault",
        "nameLocation": "559:11:25",
        "scope": 44869,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44707,
        "nodeType": "ContractDefinition",
        "src": "610:59:25",
        "nodes": [
          {
            "id": 44706,
            "nodeType": "FunctionDefinition",
            "src": "642:25:25",
            "nodes": [],
            "functionSelector": "e9fad8ee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nameLocation": "651:4:25",
            "parameters": {
              "id": 44704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:25"
            },
            "returnParameters": {
              "id": 44705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:25"
            },
            "scope": 44707,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStakingRewards",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44707
        ],
        "name": "IStakingRewards",
        "nameLocation": "620:15:25",
        "scope": 44869,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44868,
        "nodeType": "ContractDefinition",
        "src": "671:1684:25",
        "nodes": [
          {
            "id": 44713,
            "nodeType": "UsingForDirective",
            "src": "728:27:25",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44710,
              "name": "SafeERC20",
              "nameLocations": [
                "734:9:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43856,
              "src": "734:9:25"
            },
            "typeName": {
              "id": 44712,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44711,
                "name": "IERC20",
                "nameLocations": [
                  "748:6:25"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43539,
                "src": "748:6:25"
              },
              "referencedDeclaration": 43539,
              "src": "748:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43539",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 44723,
            "nodeType": "FunctionDefinition",
            "src": "760:63:25",
            "nodes": [],
            "body": {
              "id": 44722,
              "nodeType": "Block",
              "src": "793:30:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44717,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "803:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_StrategyOperationsTest_$44868_$",
                          "typeString": "type(contract super StrategyOperationsTest)"
                        }
                      },
                      "id": 44719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "809:5:25",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45063,
                      "src": "803:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:13:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44721,
                  "nodeType": "ExpressionStatement",
                  "src": "803:13:25"
                }
              ]
            },
            "baseFunctions": [
              45063
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "769:5:25",
            "overrides": {
              "id": 44715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "784:8:25"
            },
            "parameters": {
              "id": 44714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:25"
            },
            "returnParameters": {
              "id": 44716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:25"
            },
            "scope": 44868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44759,
            "nodeType": "FunctionDefinition",
            "src": "833:292:25",
            "nodes": [],
            "body": {
              "id": 44758,
              "nodeType": "Block",
              "src": "871:254:25",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 44756,
                    "nodeType": "Block",
                    "src": "930:189:25",
                    "statements": [
                      {
                        "assignments": [
                          44739
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44739,
                            "mutability": "mutable",
                            "name": "_assetFixture",
                            "nameLocation": "964:13:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44756,
                            "src": "944:33:25",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture"
                            },
                            "typeName": {
                              "id": 44738,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 44737,
                                "name": "AssetFixture",
                                "nameLocations": [
                                  "944:12:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44889,
                                "src": "944:12:25"
                              },
                              "referencedDeclaration": 44889,
                              "src": "944:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AssetFixture_$44889_storage_ptr",
                                "typeString": "struct StrategyFixture.AssetFixture"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44743,
                        "initialValue": {
                          "baseExpression": {
                            "id": 44740,
                            "name": "assetFixtures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44893,
                            "src": "980:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44889_storage_$dyn_storage",
                              "typeString": "struct StrategyFixture.AssetFixture storage ref[] storage ref"
                            }
                          },
                          "id": 44742,
                          "indexExpression": {
                            "id": 44741,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44727,
                            "src": "994:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "980:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssetFixture_$44889_storage",
                            "typeString": "struct StrategyFixture.AssetFixture storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "944:52:25"
                      },
                      {
                        "assignments": [
                          44745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44745,
                            "mutability": "mutable",
                            "name": "lpToken",
                            "nameLocation": "1018:7:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44756,
                            "src": "1010:15:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 44744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1010:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44748,
                        "initialValue": {
                          "expression": {
                            "id": 44746,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44739,
                            "src": "1028:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44747,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1042:15:25",
                          "memberName": "_lpTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44880,
                          "src": "1028:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1010:47:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "54657374696e6720666f723a",
                              "id": 44752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1084:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99316a5e5e0d183e610afe8d186ae2b979d9154ce8a99b3565c053f28d77736b",
                                "typeString": "literal_string \"Testing for:\""
                              },
                              "value": "Testing for:"
                            },
                            {
                              "id": 44753,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44745,
                              "src": "1100:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_99316a5e5e0d183e610afe8d186ae2b979d9154ce8a99b3565c053f28d77736b",
                                "typeString": "literal_string \"Testing for:\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44749,
                              "name": "console2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30110,
                              "src": "1071:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console2_$30110_$",
                                "typeString": "type(library console2)"
                              }
                            },
                            "id": 44751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1080:3:25",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22805,
                            "src": "1071:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address) pure"
                            }
                          },
                          "id": 44754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1071:37:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44755,
                        "nodeType": "ExpressionStatement",
                        "src": "1071:37:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44730,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44727,
                      "src": "899:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 44731,
                        "name": "assetFixtures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44893,
                        "src": "903:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44889_storage_$dyn_storage",
                          "typeString": "struct StrategyFixture.AssetFixture storage ref[] storage ref"
                        }
                      },
                      "id": 44732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "917:6:25",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "903:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "899:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44757,
                  "initializationExpression": {
                    "assignments": [
                      44727
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44727,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "892:1:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 44757,
                        "src": "886:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 44726,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "886:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 44729,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 44728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "896:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "886:11:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 44735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "925:3:25",
                      "subExpression": {
                        "id": 44734,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44727,
                        "src": "927:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 44736,
                    "nodeType": "ExpressionStatement",
                    "src": "925:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "881:238:25"
                }
              ]
            },
            "functionSelector": "34dfae8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_zap_setup",
            "nameLocation": "842:14:25",
            "parameters": {
              "id": 44724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:2:25"
            },
            "returnParameters": {
              "id": 44725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:25"
            },
            "scope": 44868,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44867,
            "nodeType": "FunctionDefinition",
            "src": "1131:1222:25",
            "nodes": [],
            "body": {
              "id": 44866,
              "nodeType": "Block",
              "src": "1167:1186:25",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 44864,
                    "nodeType": "Block",
                    "src": "1226:1121:25",
                    "statements": [
                      {
                        "assignments": [
                          44775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44775,
                            "mutability": "mutable",
                            "name": "_assetFixture",
                            "nameLocation": "1260:13:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1240:33:25",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture"
                            },
                            "typeName": {
                              "id": 44774,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 44773,
                                "name": "AssetFixture",
                                "nameLocations": [
                                  "1240:12:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44889,
                                "src": "1240:12:25"
                              },
                              "referencedDeclaration": 44889,
                              "src": "1240:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AssetFixture_$44889_storage_ptr",
                                "typeString": "struct StrategyFixture.AssetFixture"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44779,
                        "initialValue": {
                          "baseExpression": {
                            "id": 44776,
                            "name": "assetFixtures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44893,
                            "src": "1276:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44889_storage_$dyn_storage",
                              "typeString": "struct StrategyFixture.AssetFixture storage ref[] storage ref"
                            }
                          },
                          "id": 44778,
                          "indexExpression": {
                            "id": 44777,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44763,
                            "src": "1290:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1276:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssetFixture_$44889_storage",
                            "typeString": "struct StrategyFixture.AssetFixture storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1240:52:25"
                      },
                      {
                        "assignments": [
                          44781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44781,
                            "mutability": "mutable",
                            "name": "_lpToken",
                            "nameLocation": "1314:8:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1306:16:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 44780,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1306:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44784,
                        "initialValue": {
                          "expression": {
                            "id": 44782,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44775,
                            "src": "1325:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44783,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1339:15:25",
                          "memberName": "_lpTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44880,
                          "src": "1325:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1306:48:25"
                      },
                      {
                        "assignments": [
                          44786
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44786,
                            "mutability": "mutable",
                            "name": "_beefyVault",
                            "nameLocation": "1376:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1368:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 44785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1368:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44789,
                        "initialValue": {
                          "expression": {
                            "id": 44787,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44775,
                            "src": "1390:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44788,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1404:18:25",
                          "memberName": "_beefyVaultAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44882,
                          "src": "1390:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1368:54:25"
                      },
                      {
                        "assignments": [
                          44791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44791,
                            "mutability": "mutable",
                            "name": "_yearnVault",
                            "nameLocation": "1444:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1436:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 44790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1436:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44794,
                        "initialValue": {
                          "expression": {
                            "id": 44792,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44775,
                            "src": "1458:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44793,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1472:18:25",
                          "memberName": "_yearnVaultAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44884,
                          "src": "1458:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1436:54:25"
                      },
                      {
                        "assignments": [
                          44796
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44796,
                            "mutability": "mutable",
                            "name": "_mooWhale",
                            "nameLocation": "1512:9:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1504:17:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 44795,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1504:7:25",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44799,
                        "initialValue": {
                          "expression": {
                            "id": 44797,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44775,
                            "src": "1524:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44798,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1538:16:25",
                          "memberName": "_mooWhaleAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44886,
                          "src": "1524:30:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1504:50:25"
                      },
                      {
                        "assignments": [
                          44801
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44801,
                            "mutability": "mutable",
                            "name": "_isBoosted",
                            "nameLocation": "1573:10:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1568:15:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 44800,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1568:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44804,
                        "initialValue": {
                          "expression": {
                            "id": 44802,
                            "name": "_assetFixture",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44775,
                            "src": "1586:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetFixture_$44889_memory_ptr",
                              "typeString": "struct StrategyFixture.AssetFixture memory"
                            }
                          },
                          "id": 44803,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1600:14:25",
                          "memberName": "_isBoostedBool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44888,
                          "src": "1586:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1568:46:25"
                      },
                      {
                        "assignments": [
                          44806
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44806,
                            "mutability": "mutable",
                            "name": "_valueBefore",
                            "nameLocation": "1637:12:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 44864,
                            "src": "1629:20:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 44805,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1629:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44821,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 44820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 44818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 44811,
                                  "name": "_mooWhale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44796,
                                  "src": "1682:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 44808,
                                      "name": "_beefyVault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44786,
                                      "src": "1659:11:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 44807,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 43539,
                                    "src": "1652:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 44809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1652:19:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$43539",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 44810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1672:9:25",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43496,
                                "src": "1652:29:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 44812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1652:40:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 44814,
                                      "name": "_beefyVault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44786,
                                      "src": "1707:11:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 44813,
                                    "name": "IBeefyVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44699,
                                    "src": "1695:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IBeefyVault_$44699_$",
                                      "typeString": "type(contract IBeefyVault)"
                                    }
                                  },
                                  "id": 44815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1695:24:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBeefyVault_$44699",
                                    "typeString": "contract IBeefyVault"
                                  }
                                },
                                "id": 44816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1720:20:25",
                                "memberName": "getPricePerFullShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44698,
                                "src": "1695:45:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 44817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1695:47:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1652:90:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 44819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1745:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "1652:97:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1629:120:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44825,
                              "name": "_mooWhale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44796,
                              "src": "1777:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44822,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "1763:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13921",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 44824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1766:10:25",
                            "memberName": "startPrank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13587,
                            "src": "1763:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 44826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1763:24:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44827,
                        "nodeType": "ExpressionStatement",
                        "src": "1763:24:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44834,
                                  "name": "zapper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44936,
                                  "src": "1841:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                    "typeString": "contract MooVeloLpZapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                    "typeString": "contract MooVeloLpZapper"
                                  }
                                ],
                                "id": 44833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1833:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44832,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1833:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1833:15:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 44838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1855:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 44837,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1855:7:25",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 44836,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1850:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 44839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1850:13:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 44840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1864:3:25",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1850:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44829,
                                  "name": "_beefyVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44786,
                                  "src": "1808:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44828,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43539,
                                "src": "1801:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 44830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1801:19:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$43539",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 44831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1821:11:25",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43677,
                            "src": "1801:31:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43539_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43539_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 44841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1801:67:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44842,
                        "nodeType": "ExpressionStatement",
                        "src": "1801:67:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44846,
                              "name": "_lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44781,
                              "src": "1893:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44843,
                              "name": "zapper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44936,
                              "src": "1882:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                "typeString": "contract MooVeloLpZapper"
                              }
                            },
                            "id": 44845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1889:3:25",
                            "memberName": "zap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44582,
                            "src": "1882:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 44847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1882:20:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44848,
                        "nodeType": "ExpressionStatement",
                        "src": "1882:20:25"
                      },
                      {
                        "condition": {
                          "id": 44849,
                          "name": "_isBoosted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44801,
                          "src": "1921:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44857,
                        "nodeType": "IfStatement",
                        "src": "1917:97:25",
                        "trueBody": {
                          "id": 44856,
                          "nodeType": "Block",
                          "src": "1933:81:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 44851,
                                        "name": "staking_rewards_contract",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44933,
                                        "src": "1967:24:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 44850,
                                      "name": "IStakingRewards",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44707,
                                      "src": "1951:15:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IStakingRewards_$44707_$",
                                        "typeString": "type(contract IStakingRewards)"
                                      }
                                    },
                                    "id": 44852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1951:41:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakingRewards_$44707",
                                      "typeString": "contract IStakingRewards"
                                    }
                                  },
                                  "id": 44853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1993:4:25",
                                  "memberName": "exit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 44706,
                                  "src": "1951:46:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 44854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1951:48:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 44855,
                              "nodeType": "ExpressionStatement",
                              "src": "1951:48:25"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44859,
                                  "name": "_yearnVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44791,
                                  "src": "2040:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44858,
                                "name": "IYearnVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44703,
                                "src": "2028:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IYearnVault_$44703_$",
                                  "typeString": "type(contract IYearnVault)"
                                }
                              },
                              "id": 44860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2028:24:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYearnVault_$44703",
                                "typeString": "contract IYearnVault"
                              }
                            },
                            "id": 44861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2053:8:25",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44702,
                            "src": "2028:33:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 44862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2028:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44863,
                        "nodeType": "ExpressionStatement",
                        "src": "2028:35:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44766,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44763,
                      "src": "1195:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 44767,
                        "name": "assetFixtures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44893,
                        "src": "1199:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44889_storage_$dyn_storage",
                          "typeString": "struct StrategyFixture.AssetFixture storage ref[] storage ref"
                        }
                      },
                      "id": 44768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1213:6:25",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1199:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1195:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44865,
                  "initializationExpression": {
                    "assignments": [
                      44763
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44763,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1188:1:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 44865,
                        "src": "1182:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 44762,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1182:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 44765,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 44764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1192:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1182:11:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 44771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1221:3:25",
                      "subExpression": {
                        "id": 44770,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44763,
                        "src": "1223:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 44772,
                    "nodeType": "ExpressionStatement",
                    "src": "1221:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "1177:1170:25"
                }
              ]
            },
            "functionSelector": "b4c6bfe1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_zap_lossless",
            "nameLocation": "1140:17:25",
            "parameters": {
              "id": 44760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1157:2:25"
            },
            "returnParameters": {
              "id": 44761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:25"
            },
            "scope": 44868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44708,
              "name": "StrategyFixture",
              "nameLocations": [
                "706:15:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45174,
              "src": "706:15:25"
            },
            "id": 44709,
            "nodeType": "InheritanceSpecifier",
            "src": "706:15:25"
          }
        ],
        "canonicalName": "StrategyOperationsTest",
        "contractDependencies": [
          44677
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "22039": 1
        },
        "linearizedBaseContracts": [
          44868,
          45174,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "StrategyOperationsTest",
        "nameLocation": "680:22:25",
        "scope": 44869,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 25
}