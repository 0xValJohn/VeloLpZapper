{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetFixtures",
      "outputs": [
        {
          "internalType": "address",
          "name": "_lpTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beefyVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yearnVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mooWhaleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isBoostedBool",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "beefyVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boost_zap_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isBoosted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "mooWhale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking_rewards_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "yearnVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zapper",
      "outputs": [
        {
          "internalType": "contract MooVeloLpZapper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff199081166001908117909255600b805490911682179055602280546001600160a01b031990811690915560238054821690921790915560258054821673498d9dcbb1708e135bdc76ef007f08cba4477be21790556026805490911673f8126ef025651e1b313a6893fcf4034f4f4bd2aa17905534801561008957600080fd5b50612eba806100996000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638af02b65116100c3578063beb57cdc1161007c578063beb57cdc14610324578063d0eae46114610358578063e20c9f711461038c578063e6ddadbf14610394578063fa7626d4146103c2578063fe0b6578146103cf57600080fd5b80638af02b65146102c3578063916a17c6146102d6578063a6a1858f146102de578063a7a21712146102f1578063b5508aa914610304578063ba414fa61461030c57600080fd5b80633f7286f4116101155780633f7286f4146102175780634e9fea771461021f5780634f8632ba1461025257806366d9a9a0146102655780637a58eb8c1461027a57806385226c81146102ae57600080fd5b80630a9254e41461015d5780630aa8e8731461016757806312d43a51146101ba5780631ed7831c146101e55780632ade3880146101fa5780633e5e3c231461020f575b600080fd5b6101656103e2565b005b61017a6101753660046115c5565b610a03565b604080516001600160a01b0396871681529486166020860152928516928401929092529092166060820152901515608082015260a0015b60405180910390f35b6022546101cd906001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b6101ed610a59565b6040516101b191906115de565b610202610abb565b6040516101b1919061164f565b6101ed610bfd565b6101ed610c5d565b6101cd61022d366004611740565b805160208183018101805182825292820191909301209152546001600160a01b031681565b6023546101cd906001600160a01b031681565b61026d610cbd565b6040516101b191906117f1565b6101cd610288366004611740565b8051602081830181018051601f825292820191909301209152546001600160a01b031681565b6102b6610da3565b6040516101b191906118a4565b6026546101cd906001600160a01b031681565b61026d610e73565b6024546101cd906001600160a01b031681565b6027546101cd906001600160a01b031681565b6102b6610f59565b610314611029565b60405190151581526020016101b1565b6101cd610332366004611740565b8051602081830181018051601d825292820191909301209152546001600160a01b031681565b6101cd610366366004611740565b8051602081830181018051601e825292820191909301209152546001600160a01b031681565b6101ed611156565b6103146103a2366004611740565b805160208183018101805160218252928201919093012091525460ff1681565b6007546103149060ff1681565b6025546101cd906001600160a01b031681565b6103ea6111b6565b6103f26112b4565b6103fa611385565b610402611456565b61040a611527565b6040805160a081018252600a60608201908152690c2d8cae8d0beeecae8d60b31b608083015281528151808301835260088152677374675f7573646360c01b60208281019190915280830191909152825180840184526009815268737573642d7573646360b81b9181019190915281830152602554915190916001600160a01b031690610496906115b8565b6001600160a01b039091168152602001604051809103906000f0801580156104c2573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b03928316908117909155602254604051630ad3d58760e41b815292166004830152600160248301529063ad3d587090604401600060405180830381600087803b15801561052457600080fd5b505af1158015610538573d6000803e3d6000fd5b5050505060005b60038160ff161015610856576000828260ff166003811061056257610562611911565b60200201519050601c6040518060a00160405280601d846040516105869190611927565b9081526040805160209281900383019020546001600160a01b0316835251910190601e906105b5908690611927565b9081526040805160209281900383019020546001600160a01b0316835251910190601f906105e4908690611927565b9081526040805160209281900383019020546001600160a01b031683525191810191610611908690611927565b9081526040805160209281900383019020546001600160a01b0316835251910190602190610640908690611927565b908152604080519182900360209081019092205460ff1615159092528354600180820186556000958652948290208451600492830290910180546001600160a01b039283166001600160a01b0319918216178255938601519681018054978316978516979097179096558484015160028701805491831691909416179092556060840151600390950180546080909501511515600160a01b026001600160a81b0319909516958316959095179390931790935560225490516303223eab60e11b8152921690820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561074157600080fd5b505af1158015610755573d6000803e3d6000fd5b50506027546040516001600160a01b03909116925063f1ec23cf9150601d9061077f908590611927565b908152604051908190036020018120546001600160a01b031690601e906107a7908690611927565b908152604051908190036020018120546001600160a01b031690601f906107cf908790611927565b908152604051908190036020018120546001600160e01b031960e086901b1682526001600160a01b039384166004830152918316602482015291166044820152606401600060405180830381600087803b15801561082c57600080fd5b505af1158015610840573d6000803e3d6000fd5b50505050508061084f90611943565b905061053f565b50602254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526223b7bb60e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156108c957600080fd5b505af11580156108dd573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152632ab9b2b960e11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561095957600080fd5b505af115801561096d573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b0390921660048301529181019190915260056044820152645768616c6560d81b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156109e857600080fd5b505af11580156109fc573d6000803e3d6000fd5b5050505050565b601c8181548110610a1357600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090821692821691811690600160a01b900460ff1685565b60606014805480602002602001604051908101604052809291908181526020018280548015610ab157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a93575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015610bf457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610bdd578382906000526020600020018054610b5090611970565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7c90611970565b8015610bc95780601f10610b9e57610100808354040283529160200191610bc9565b820191906000526020600020905b815481529060010190602001808311610bac57829003601f168201915b505050505081526020019060010190610b31565b505050508152505081526020019060010190610adf565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610ab1576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a93575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610ab1576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a93575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610bf45760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d8b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610d4d5790505b50505050508152505081526020019060010190610ce1565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610bf4578382906000526020600020018054610de690611970565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1290611970565b8015610e5f5780601f10610e3457610100808354040283529160200191610e5f565b820191906000526020600020905b815481529060010190602001808311610e4257829003601f168201915b505050505081526020019060010190610dc7565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610bf45760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610f4157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610f035790505b50505050508152505081526020019060010190610e97565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610bf4578382906000526020600020018054610f9c90611970565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc890611970565b80156110155780601f10610fea57610100808354040283529160200191611015565b820191906000526020600020905b815481529060010190602001808311610ff857829003601f168201915b505050505081526020019060010190610f7d565b600754600090610100900460ff161561104b5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156111515760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916110d9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016119aa565b60408051601f19818403018152908290526110f391611927565b6000604051808303816000865af19150503d8060008114611130576040519150601f19603f3d011682016040523d82523d6000602084013e611135565b606091505b509150508080602001905181019061114d91906119db565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610ab1576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a93575050505050905090565b73a1055762336f92b4b8d2edc032a0ce45ead6280a601d6040516111ea90690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601d60088301819052905191829003602801822080547356770b94279539416855fe29ef14b26438b5e42194169390931790925568737573642d7573646360b81b8152736d5ba400640226e24b50214d2bbb3d4db8e6e15a91906009015b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055565b731a1f0db1050d1cad52eeb72371ebfd7716b53a2f601e6040516112e890690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601e600883018190529051918290036028018220805473d09b5a0650d68aae6b1666ee5e770a383d29a97c94169390931790925568737573642d7573646360b81b815273182fe51442c7d65360ed1511f30be6261c2c20c19190600901611283565b73f7d66b41cd4241eae450fd9d2d6995754634d9f3601f6040516113b990690c2d8cae8d0beeecae8d60b31b8152600a0190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055677374675f7573646360c01b8252601f600883018190529051918290036028018220805473f6b272134a193df5b04332e73184e5b40b8eb81094169390931790925568737573642d7573646360b81b8152731b1d2efb6045851f8ccde24369003e0ff157980b9190600901611283565b73c47fae56f3702737b69ed615950c01217ec5c7c8602060405161148a90690c2d8cae8d0beeecae8d60b31b8152600a0190565b90815260408051918290036020908101832080546001600160a01b03959095166001600160a01b0319958616179055677374675f7573646360c01b8352600883018190529051602892819003929092018220805490931673ed8886f9b87f06bf7ab1a4897881bd83ecf1f52e1790925568737573642d7573646360b81b8152728a74d96d799b0fcfae8462bfff8c37c7ccc6119190600901611283565b6001602160405161154890690c2d8cae8d0beeecae8d60b31b8152600a0190565b90815260408051918290036020018220805493151560ff19948516179055677374675f7573646360c01b8252602160088301819052815192839003602801832080548516600117905568737573642d7573646360b81b835260098301525190819003602901902080549091169055565b61148080611a0583390190565b6000602082840312156115d757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561161f5783516001600160a01b0316835292840192918401916001016115fa565b50909695505050505050565b60005b8381101561164657818101518382015260200161162e565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561171d57603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b8181101561170657898403605f19018352845180518086526116e7818e88018f850161162b565b958c0195601f01601f1916949094018b019350918a01916001016116c0565b509197505050938601935090850190600101611676565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561175257600080fd5b813567ffffffffffffffff8082111561176a57600080fd5b818401915084601f83011261177e57600080fd5b8135818111156117905761179061172a565b604051601f8201601f19908116603f011681019083821181831017156117b8576117b861172a565b816040528281528760208487010111156117d157600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561189557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156118805783516001600160e01b0319168252928b019260019290920191908b0190611856565b50978a01979550505091870191600101611819565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561171d57878503603f19018452815180518087526118f2818989018a850161162b565b601f01601f1916959095018601945092850192908501906001016118cb565b634e487b7160e01b600052603260045260246000fd5b6000825161193981846020870161162b565b9190910192915050565b600060ff821660ff810361196757634e487b7160e01b600052601160045260246000fd5b60010192915050565b600181811c9082168061198457607f821691505b6020821081036119a457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906119cd81600485016020870161162b565b919091016004019392505050565b6000602082840312156119ed57600080fd5b815180151581146119fd57600080fd5b939250505056fe608060405234801561001057600080fd5b5060405161148038038061148083398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611394806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063d003d0f511610066578063d003d0f5146101af578063dc8dddf3146101c2578063f1ec23cf146101e5578063f2fde38b146101f857600080fd5b80638da5cb5b1461017a578063ad3d58701461018b578063c9e4f07a1461019e57600080fd5b806303d40513146100d45780631bb5e2dc14610104578063424351751461011757806343470f2a1461012c578063510a33831461015f578063715018a614610172575b600080fd5b6100e76100e236600461118e565b61020b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e76101123660046111ba565b610239565b61012a6101253660046111d3565b610263565b005b61014f61013a3660046111d3565b60056020526000908152604090205460ff1681565b60405190151581526020016100fb565b61012a61016d3660046111d3565b6102bf565b61012a610880565b6000546001600160a01b03166100e7565b61012a6101993660046111fe565b610894565b6001546040519081526020016100fb565b6002546100e7906001600160a01b031681565b61014f6101d03660046111d3565b60046020526000908152604090205460ff1681565b61012a6101f3366004611237565b6108ff565b61012a6102063660046111d3565b610b73565b6003602052816000526040600020816002811061022757600080fd5b01546001600160a01b03169150829050565b6001818154811061024957600080fd5b6000918252602090912001546001600160a01b0316905081565b61026b610bec565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fe0e7227de5ec204691b2be349b6bc66860230c83e2ae37bf1939ed8b01fc5b569060200160405180910390a150565b6001600160a01b0381166000908152600360205260408082208151808301928390529160029082845b81546001600160a01b031681526001909101906020018083116102e8575050505050905060008160006002811061032157610321611282565b60200201519050600082600160200201516040516370a0823160e01b81523360048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190611298565b84519091506103b0908483610c46565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610403573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042791906112b1565b5083600060200201516001600160a01b031663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03881691506370a0823190602401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190611298565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663f59e3de76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056891906112ce565b6020870151604051638dddb3e560e01b81526001600160a01b039182166004820152911690638dddb3e590602401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906112ce565b90506001600160a01b03811661074e5761060e6040518060400160405280600681526020016563617365203160d01b815250610cef565b602086015161061e908884610c46565b85600160200201516001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03871691506370a0823190602401602060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e39190611298565b90506106f96001600160a01b0386163383610d32565b602080880151604080518481526000938101939093526001600160a01b039091169133917fe96c9e409dfdd43a71a9f555abb561716d5a3b7cb5503aef39c3b19e435638bc910160405180910390a350610877565b6107756040518060400160405280600681526020016531b0b9b2901960d11b815250610cef565b610780338884610c46565b60025460208701516040516001600160a01b039182166024820152604481018590526000928392169060640160408051601f198184030181529181526020820180516001600160e01b0316636d6a66a960e11b179052516107e1919061130f565b600060405180830381855af49150503d806000811461081c576040519150601f19603f3d011682016040523d82523d6000602084013e610821565b606091505b5060208a8101516040805189815260019381019390935280519496509294506001600160a01b03169233927fe96c9e409dfdd43a71a9f555abb561716d5a3b7cb5503aef39c3b19e435638bc928290030190a350505b50505050505050565b610888610bec565b6108926000610d95565b565b61089c610bec565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527f76b0b705fe5def0b2d1a1c29a7b39c0d71d957ff92b1cbfc130a3d834af95710910160405180910390a15050565b3360009081526004602052604090205460ff166109525760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b806001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b491906112ce565b6001600160a01b0316826001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f91906112ce565b6001600160a01b031614610a755760405162461bcd60e51b815260206004820152601760248201527f6c7020746f6b656e20646f6573206e6f74206d617463680000000000000000006044820152606401610949565b6001600160a01b03838116600090815260036020908152604080832080546001600160a01b0319908116888716178255600190910180549091169486169490941790935560059052205460ff16610b27576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386169081179091556000908152600560205260409020805460ff191690911790555b604080516001600160a01b03848116825283811660208301528516917f7f46075c67ca5bbd3aaf82d8e324282141f27b7cba3376e5498a6b70c9931c2a910160405180910390a2505050565b610b7b610bec565b6001600160a01b038116610be05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610949565b610be981610d95565b50565b6000546001600160a01b031633146108925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610949565b604051636eb1769f60e11b81523060048201526001600160a01b03848116602483015282919084169063dd62ed3e90604401602060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb99190611298565b1015610cea57610cd46001600160a01b038316846000610de5565b610cea6001600160a01b03831684600019610de5565b505050565b610be981604051602401610d03919061132b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610efa565b6040516001600160a01b038316602482015260448101829052610cea90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f03565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801580610e5f5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5d9190611298565b155b610eca5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610949565b6040516001600160a01b038316602482015260448101829052610cea90849063095ea7b360e01b90606401610d5e565b610be981610fd5565b6000610f58826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ff69092919063ffffffff16565b805190915015610cea5780806020019051810190610f7691906112b1565b610cea5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610949565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060611005848460008561100f565b90505b9392505050565b6060824710156110705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610949565b6001600160a01b0385163b6110c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610949565b600080866001600160a01b031685876040516110e3919061130f565b60006040518083038185875af1925050503d8060008114611120576040519150601f19603f3d011682016040523d82523d6000602084013e611125565b606091505b5091509150611135828286611140565b979650505050505050565b6060831561114f575081611008565b82511561115f5782518084602001fd5b8160405162461bcd60e51b8152600401610949919061132b565b6001600160a01b0381168114610be957600080fd5b600080604083850312156111a157600080fd5b82356111ac81611179565b946020939093013593505050565b6000602082840312156111cc57600080fd5b5035919050565b6000602082840312156111e557600080fd5b813561100881611179565b8015158114610be957600080fd5b6000806040838503121561121157600080fd5b823561121c81611179565b9150602083013561122c816111f0565b809150509250929050565b60008060006060848603121561124c57600080fd5b833561125781611179565b9250602084013561126781611179565b9150604084013561127781611179565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112aa57600080fd5b5051919050565b6000602082840312156112c357600080fd5b8151611008816111f0565b6000602082840312156112e057600080fd5b815161100881611179565b60005b838110156113065781810151838201526020016112ee565b50506000910152565b600082516113218184602087016112eb565b9190910192915050565b602081526000825180602084015261134a8160408501602087016112eb565b601f01601f1916919091016040019291505056fea264697066735822122070a982ac06e81d2bb984b7f4fca317be892f13c9b7ab022f3ab7f0d965e25b7164736f6c63430008150033a264697066735822122048ca71b209b5722461b4e500a8abe22f7e3c3d719a5b239d504f7139327bce7d64736f6c63430008150033",
    "sourceMap": "248:3286:26:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;;;1594:4;1572:26;;;;;;3126:44:3;;;;;;;;;;773:31:26;;;-1:-1:-1;;;;;;773:31:26;;;;;;810:32;;;;;;;;;;;875:78;;;;;911:42;875:78;;;959:84;;;;;;1001:42;959:84;;;248:3286;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "248:3286:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:875;;;:::i;:::-;;489:35;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;508:15:27;;;490:34;;560:15;;;555:2;540:18;;533:43;612:15;;;592:18;;;585:43;;;;664:15;;;659:2;644:18;;637:43;724:14;;717:22;711:3;696:19;;689:51;439:3;424:19;489:35:26;;;;;;;;773:31;;;;;-1:-1:-1;;;;;773:31:26;;;;;;-1:-1:-1;;;;;915:32:27;;;897:51;;885:2;870:18;773:31:26;751:203:27;2452:134:6;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;678:42:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;678:42:26;;;810:32;;;;;-1:-1:-1;;;;;810:32:26;;;2738:178:6;;;:::i;:::-;;;;;;;:::i;628:44:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;628:44:26;;;2592:140:6;;;:::i;:::-;;;;;;;:::i;959:84:26:-;;;;;-1:-1:-1;;;;;959:84:26;;;3069:146:6;;;:::i;848:20:26:-;;;;;-1:-1:-1;;;;;848:20:26;;;1050:29;;;;;-1:-1:-1;;;;;1050:29:26;;;2157:141:6;;;:::i;1819:584:0:-;;;:::i;:::-;;;7829:14:27;;7822:22;7804:41;;7792:2;7777:18;1819:584:0;7664:187:27;531:41:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:41:26;;;578:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;578:44:26;;;2304:142:6;;;:::i;726:40:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:26:0;;;;;;;;;875:78:26;;;;;-1:-1:-1;;;;;875:78:26;;;1086:875;1128:13;:11;:13::i;:::-;1151:16;:14;:16::i;:::-;1177;:14;:16::i;:::-;1203:14;:12;:14::i;:::-;1227:15;:13;:15::i;:::-;1261:71;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1261:71:26;;;;;;;-1:-1:-1;;;1261:71:26;1372:18;;1352:39;;1261:71;;-1:-1:-1;;;;;1372:18:26;;1352:39;;;:::i;:::-;-1:-1:-1;;;;;915:32:27;;;897:51;;885:2;870:18;1352:39:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1343:6:26;:48;;-1:-1:-1;;;;;;1343:48:26;-1:-1:-1;;;;;1343:48:26;;;;;;;;;1424:3;;1401:33;;-1:-1:-1;;;1401:33:26;;1424:3;;1401:33;;;8024:51:27;-1:-1:-1;8091:18:27;;;8084:50;1343:48:26;1401:22;;7997:18:27;;1401:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:7;1445:413;1467:19;1463:1;:23;;;1445:413;;;1507:25;1535:12;1548:1;1535:15;;;;;;;;;:::i;:::-;;;;;1507:43;;1564:13;1583:131;;;;;;;;1596:7;1604:11;1596:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1596:20:26;1583:131;;1618:23;1583:131;;;1618:10;;:23;;1629:11;;1618:23;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:23:26;1583:131;;1643:23;1583:131;;;1643:10;;:23;;1654:11;;1643:23;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1643:23:26;1583:131;;1668:21;1583:131;;;;1668:21;;1677:11;;1668:21;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1668:21:26;1583:131;;1691:22;1583:131;;;1691:9;;:22;;1701:11;;1691:22;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1583:131;;;;;1564:151;;1691:22;1564:151;;;;;-1:-1:-1;1564:151:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1564:151:26;;;-1:-1:-1;;;;;;1564:151:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1564:151:26;-1:-1:-1;;;;;;1564:151:26;;;;;;;;;;;;;;;;;1743:3;;1729:18;;-1:-1:-1;;;1729:18:26;;1743:3;;1729:18;;;897:51:27;1729:13:26;;;;870:18:27;;1729::26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1761:6:26;;1776:20;;-1:-1:-1;;;;;1761:6:26;;;;-1:-1:-1;1761:14:26;;-1:-1:-1;1776:7:26;;:20;;1784:11;;1776:20;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1776:20:26;;1798:10;;:23;;1809:11;;1798:23;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1798:23:26;;1823:10;;:23;;1834:11;;1823:23;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1761:86:26;;;;;;;-1:-1:-1;;;;;8829:15:27;;;1761:86:26;;;8811:34:27;8881:15;;;8861:18;;;8854:43;1823:23:26;;8913:18:27;;;8906:43;8746:18;;1761:86:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:365;1488:3;;;;:::i;:::-;;;1445:413;;;-1:-1:-1;1877:3:26;;1868:20;;;-1:-1:-1;;;1868:20:26;;-1:-1:-1;;;;;1877:3:26;;;1868:20;;;9449:51:27;9516:18;;;9509:30;9575:1;9555:18;;;9548:29;-1:-1:-1;;;9593:18:27;;;9586:33;1868:8:26;;;;9636:19:27;;1868:20:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1907:4:26;;1898:22;;;-1:-1:-1;;;1898:22:26;;-1:-1:-1;;;;;1907:4:26;;;1898:22;;;;9878:51:27;;;;9945:18;;;9938:30;;;;9984:18;;;9977:29;-1:-1:-1;;;10022:18:27;;;10015:34;1898:8:26;;-1:-1:-1;1898:8:26;;-1:-1:-1;10066:19:27;;1898:22:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1939:5:26;;;1930:24;;;-1:-1:-1;;;1930:24:26;;-1:-1:-1;;;;;1939:5:26;;;1930:24;;;10308:51:27;10375:18;;;10368:30;;;;10434:1;10414:18;;;10407:29;-1:-1:-1;;;10452:18:27;;;10445:35;1930:8:26;;-1:-1:-1;1930:8:26;;-1:-1:-1;10497:19:27;;1930:24:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:843;1086:875::o;489:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:35:26;;;;-1:-1:-1;489:35:26;;;;;;;;;;-1:-1:-1;;;489:35:26;;;;;:::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;11086:51:27;;;-1:-1:-1;;;11153:18:27;;;11146:34;2196:43:0;;;;;;;;;11059:18:27;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;1967:318:26:-;2033:42;2009:7;:21;;;;-1:-1:-1;;;12356:25:27;;12406:2;12397:12;;12154:261;2009:21:26;;;;;;;;;;;;;;;:66;;-1:-1:-1;;;;;2009:66:26;;;;-1:-1:-1;;;;;;2009:66:26;;;;;;-1:-1:-1;;;12622:23:27;;2085:7:26;12670:1:27;12661:11;;2085:19:26;;;;;;;;;;;;;:64;;2107:42;2085:64;;;;;;;;;-1:-1:-1;;;12885:24:27;;2182:42:26;;2085:7;12934:1:27;12925:11;2159:20:26;;;;;;;;;;;;;;:65;;-1:-1:-1;;;;;2159:65:26;;;;-1:-1:-1;;;;;;2159:65:26;;;;;;;;;1967:318::o;2291:336::-;2363:42;2336:10;:24;;;;-1:-1:-1;;;12356:25:27;;12406:2;12397:12;;12154:261;2336:24:26;;;;;;;;;;;;;;;:69;;-1:-1:-1;;;;;2336:69:26;;;;-1:-1:-1;;;;;;2336:69:26;;;;;;-1:-1:-1;;;12622:23:27;;2415:10:26;12670:1:27;12661:11;;2415:22:26;;;;;;;;;;;;;:67;;2440:42;2415:67;;;;;;;;;-1:-1:-1;;;12885:24:27;;2518:42:26;;2415:10;12934:1:27;12925:11;2492:23:26;12683:259:27;2633:336:26;2705:42;2678:10;:24;;;;-1:-1:-1;;;12356:25:27;;12406:2;12397:12;;12154:261;2678:24:26;;;;;;;;;;;;;;;:69;;-1:-1:-1;;;;;2678:69:26;;;;-1:-1:-1;;;;;;2678:69:26;;;;;;-1:-1:-1;;;12622:23:27;;2757:10:26;12670:1:27;12661:11;;2757:22:26;;;;;;;;;;;;;:67;;2782:42;2757:67;;;;;;;;;-1:-1:-1;;;12885:24:27;;2860:42:26;;2757:10;12934:1:27;12925:11;2834:23:26;12683:259:27;2975:330:26;3043:42;3018:8;:22;;;;-1:-1:-1;;;12356:25:27;;12406:2;12397:12;;12154:261;3018:22:26;;;;;;;;;;;;;;;;;:67;;-1:-1:-1;;;;;3018:67:26;;;;-1:-1:-1;;;;;;3018:67:26;;;;;;-1:-1:-1;;;12622:23:27;;12670:1;12661:11;;3095:20:26;;;;;;;;;;;;;;;;:65;;;;;3118:42;3095:65;;;;-1:-1:-1;;;12885:24:27;;3197:42:26;;3018:22;12934:1:27;12925:11;3173:21:26;12683:259:27;3311:221:26;3381:4;3355:9;:23;;;;-1:-1:-1;;;12356:25:27;;12406:2;12397:12;;12154:261;3355:23:26;;;;;;;;;;;;;;;:30;;;;;-1:-1:-1;;3355:30:26;;;;;;-1:-1:-1;;;12622:23:27;;3395:9:26;12670:1:27;12661:11;;3395:21:26;;;;;;;;;;;;;:28;;;;-1:-1:-1;3395:28:26;;;-1:-1:-1;;;12885:24:27;;12934:1;12925:11;;3436:22:26;;;;;;;;;;:30;;;;;;;3311:221::o;-1:-1:-1:-;;;;;;;;:::o;14:180:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;959:658::-;1130:2;1182:21;;;1252:13;;1155:18;;;1274:22;;;1101:4;;1130:2;1353:15;;;;1327:2;1312:18;;;1101:4;1396:195;1410:6;1407:1;1404:13;1396:195;;;1475:13;;-1:-1:-1;;;;;1471:39:27;1459:52;;1566:15;;;;1531:12;;;;1507:1;1425:9;1396:195;;;-1:-1:-1;1608:3:27;;959:658;-1:-1:-1;;;;;;959:658:27:o;1622:250::-;1707:1;1717:113;1731:6;1728:1;1725:13;1717:113;;;1807:11;;;1801:18;1788:11;;;1781:39;1753:2;1746:10;1717:113;;;-1:-1:-1;;1864:1:27;1846:16;;1839:27;1622:250::o;1877:1899::-;2081:4;2110:2;2150;2139:9;2135:18;2180:2;2169:9;2162:21;2203:6;2238;2232:13;2269:6;2261;2254:22;2307:2;2296:9;2292:18;2285:25;;2369:2;2359:6;2356:1;2352:14;2341:9;2337:30;2333:39;2319:53;;2407:2;2399:6;2395:15;2428:1;2438:1309;2452:6;2449:1;2446:13;2438:1309;;;-1:-1:-1;;2517:22:27;;;2513:36;2501:49;;2573:13;;2660:9;;-1:-1:-1;;;;;2656:35:27;2641:51;;2731:11;;2725:18;2625:2;2763:15;;;2756:27;;;2844:19;;2613:15;;;2876:24;;;3056:21;;;;2923:2;3009:1;3005:16;;;2993:29;;2989:38;;;2947:15;;;;3101:1;3115:523;3131:8;3126:3;3123:17;3115:523;;;3212:19;;;-1:-1:-1;;3208:33:27;3194:48;;3269:15;;3317:9;;3343:24;;;3384:74;3317:9;3432:15;;;3419:11;;;3384:74;:::i;:::-;3567:17;;;;3528:2;3505:17;-1:-1:-1;;3501:31:27;3489:44;;;;3485:53;;;-1:-1:-1;3610:14:27;;;;3159:1;3150:11;3115:523;;;-1:-1:-1;3661:6:27;;-1:-1:-1;;;3725:12:27;;;;-1:-1:-1;3690:15:27;;;;2474:1;2467:9;2438:1309;;;-1:-1:-1;3764:6:27;;1877:1899;-1:-1:-1;;;;;;;1877:1899:27:o;3781:127::-;3842:10;3837:3;3833:20;3830:1;3823:31;3873:4;3870:1;3863:15;3897:4;3894:1;3887:15;3913:922;3982:6;4035:2;4023:9;4014:7;4010:23;4006:32;4003:52;;;4051:1;4048;4041:12;4003:52;4091:9;4078:23;4120:18;4161:2;4153:6;4150:14;4147:34;;;4177:1;4174;4167:12;4147:34;4215:6;4204:9;4200:22;4190:32;;4260:7;4253:4;4249:2;4245:13;4241:27;4231:55;;4282:1;4279;4272:12;4231:55;4318:2;4305:16;4340:2;4336;4333:10;4330:36;;;4346:18;;:::i;:::-;4421:2;4415:9;4389:2;4475:13;;-1:-1:-1;;4471:22:27;;;4495:2;4467:31;4463:40;4451:53;;;4519:18;;;4539:22;;;4516:46;4513:72;;;4565:18;;:::i;:::-;4605:10;4601:2;4594:22;4640:2;4632:6;4625:18;4680:7;4675:2;4670;4666;4662:11;4658:20;4655:33;4652:53;;;4701:1;4698;4691:12;4652:53;4757:2;4752;4748;4744:11;4739:2;4731:6;4727:15;4714:46;4802:1;4780:15;;;4797:2;4776:24;4769:35;;;;-1:-1:-1;4784:6:27;3913:922;-1:-1:-1;;;;;3913:922:27:o;4840:1567::-;5042:4;5071:2;5111;5100:9;5096:18;5141:2;5130:9;5123:21;5164:6;5199;5193:13;5230:6;5222;5215:22;5256:2;5246:12;;5289:2;5278:9;5274:18;5267:25;;5351:2;5341:6;5338:1;5334:14;5323:9;5319:30;5315:39;5389:2;5381:6;5377:15;5410:1;5431;5441:937;5457:6;5452:3;5449:15;5441:937;;;5526:22;;;-1:-1:-1;;5522:36:27;5510:49;;5582:13;;5669:9;;-1:-1:-1;;;;;5665:35:27;5650:51;;5740:11;;5734:18;5772:15;;;5765:27;;;5853:19;;5622:15;;;5885:24;;;5975:21;;;;6020:1;;5943:2;5931:15;;;6034:236;6050:8;6045:3;6042:17;6034:236;;;6131:15;;-1:-1:-1;;;;;;6127:42:27;6113:57;;6239:17;;;;6078:1;6069:11;;;;;6196:14;;;;6034:236;;;-1:-1:-1;6356:12:27;;;;6293:5;-1:-1:-1;;;6321:15:27;;;;5483:1;5474:11;5441:937;;;-1:-1:-1;6395:6:27;;4840:1567;-1:-1:-1;;;;;;;;;4840:1567:27:o;6412:1014::-;6574:4;6603:2;6643;6632:9;6628:18;6673:2;6662:9;6655:21;6696:6;6731;6725:13;6762:6;6754;6747:22;6800:2;6789:9;6785:18;6778:25;;6862:2;6852:6;6849:1;6845:14;6834:9;6830:30;6826:39;6812:53;;6900:2;6892:6;6888:15;6921:1;6931:466;6945:6;6942:1;6939:13;6931:466;;;7010:22;;;-1:-1:-1;;7006:36:27;6994:49;;7066:13;;7108:9;;7130:24;;;7167:74;7108:9;7215:15;;;7202:11;;;7167:74;:::i;:::-;7307:2;7284:17;-1:-1:-1;;7280:31:27;7268:44;;;;7264:53;;;-1:-1:-1;7375:12:27;;;;7340:15;;;;6967:1;6960:9;6931:466;;8145:127;8206:10;8201:3;8197:20;8194:1;8187:31;8237:4;8234:1;8227:15;8261:4;8258:1;8251:15;8277:289;8408:3;8446:6;8440:13;8462:66;8521:6;8516:3;8509:4;8501:6;8497:17;8462:66;:::i;:::-;8544:16;;;;;8277:289;-1:-1:-1;;8277:289:27:o;8960:272::-;8997:3;9041:4;9034:5;9030:16;9070:4;9061:7;9058:17;9055:140;;9117:10;9112:3;9108:20;9105:1;9098:31;9152:4;9149:1;9142:15;9180:4;9177:1;9170:15;9055:140;9224:1;9211:15;;8960:272;-1:-1:-1;;8960:272:27:o;10527:380::-;10606:1;10602:12;;;;10649;;;10670:61;;10724:4;10716:6;10712:17;10702:27;;10670:61;10777:2;10769:6;10766:14;10746:18;10743:38;10740:161;;10823:10;10818:3;10814:20;10811:1;10804:31;10858:4;10855:1;10848:15;10886:4;10883:1;10876:15;10740:161;;10527:380;;;:::o;11191:384::-;-1:-1:-1;;;;;;11376:33:27;;11364:46;;11433:13;;11346:3;;11455:74;11433:13;11518:1;11509:11;;11502:4;11490:17;;11455:74;:::i;:::-;11549:16;;;;11567:1;11545:24;;11191:384;-1:-1:-1;;;11191:384:27:o;11872:277::-;11939:6;11992:2;11980:9;11971:7;11967:23;11963:32;11960:52;;;12008:1;12005;11998:12;11960:52;12040:9;12034:16;12093:5;12086:13;12079:21;12072:5;12069:32;12059:60;;12115:1;12112;12105:12;12059:60;12138:5;11872:277;-1:-1:-1;;;11872:277:27:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "assetFixtures(uint256)": "0aa8e873",
    "beefyVault(string)": "d0eae461",
    "boost_zap_contract()": "fe0b6578",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "gov()": "12d43a51",
    "isBoosted(string)": "e6ddadbf",
    "lpToken(string)": "beb57cdc",
    "mooWhale(string)": "4e9fea77",
    "setUp()": "0a9254e4",
    "staking_rewards_contract()": "8af02b65",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "user()": "4f8632ba",
    "whale()": "a6a1858f",
    "yearnVault(string)": "7a58eb8c",
    "zapper()": "a7a21712"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetFixtures\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_lpTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beefyVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yearnVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mooWhaleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBoostedBool\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"beefyVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boost_zap_contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isBoosted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mooWhale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking_rewards_contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"yearnVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zapper\",\"outputs\":[{\"internalType\":\"contract MooVeloLpZapper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/StrategyFixture.sol\":\"StrategyFixture\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/MooVeloLpZapper.sol\":{\"keccak256\":\"0x37825f1e4e94dfbe2f2df924c785943e3d50e05e3bbf8da6ed850c4742725c3a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4c94c3b8b16bf0c32f25afbdb5640af487e5a708be5d1842797033047c41fe92\",\"dweb:/ipfs/QmSE42Vwn5ZSh1kE35LJQs5E7gZY9C3A3U8NWdxad5vEYx\"]},\"test/utils/StrategyFixture.sol\":{\"keccak256\":\"0x3339892ef26ab4b1516fe344a5d5b2daf15ee4e1b161d069549e1a8c0f5e05d3\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://514ce79e168ec1db9fd37158c5e0120c037a17a52e32648566f849aaafa947ae\",\"dweb:/ipfs/Qmayme2CGSg63YNHNHDBxboYW4uGZmuvUXyFixvg9XWMLU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetFixtures",
          "outputs": [
            {
              "internalType": "address",
              "name": "_lpTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_beefyVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_yearnVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_mooWhaleAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isBoostedBool",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beefyVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "boost_zap_contract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gov",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBoosted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mooWhale",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staking_rewards_contract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whale",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "yearnVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "zapper",
          "outputs": [
            {
              "internalType": "contract MooVeloLpZapper",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/StrategyFixture.sol": "StrategyFixture"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/MooVeloLpZapper.sol": {
        "keccak256": "0x37825f1e4e94dfbe2f2df924c785943e3d50e05e3bbf8da6ed850c4742725c3a",
        "urls": [
          "bzz-raw://4c94c3b8b16bf0c32f25afbdb5640af487e5a708be5d1842797033047c41fe92",
          "dweb:/ipfs/QmSE42Vwn5ZSh1kE35LJQs5E7gZY9C3A3U8NWdxad5vEYx"
        ],
        "license": "AGPL-3.0"
      },
      "test/utils/StrategyFixture.sol": {
        "keccak256": "0x3339892ef26ab4b1516fe344a5d5b2daf15ee4e1b161d069549e1a8c0f5e05d3",
        "urls": [
          "bzz-raw://514ce79e168ec1db9fd37158c5e0120c037a17a52e32648566f849aaafa947ae",
          "dweb:/ipfs/Qmayme2CGSg63YNHNHDBxboYW4uGZmuvUXyFixvg9XWMLU"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/StrategyFixture.sol",
    "id": 45185,
    "exportedSymbols": {
      "IERC20": [
        43539
      ],
      "MooVeloLpZapper": [
        44687
      ],
      "StrategyFixture": [
        45184
      ],
      "Test": [
        12215
      ],
      "console2": [
        30110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3497:26",
    "nodes": [
      {
        "id": 44880,
        "nodeType": "PragmaDirective",
        "src": "37:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 44882,
        "nodeType": "ImportDirective",
        "src": "63:56:26",
        "nodes": [],
        "absolutePath": "src/MooVeloLpZapper.sol",
        "file": "src/MooVeloLpZapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45185,
        "sourceUnit": 44688,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44881,
              "name": "MooVeloLpZapper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44687,
              "src": "71:15:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44885,
        "nodeType": "ImportDirective",
        "src": "120:50:26",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45185,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44883,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "128:4:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44884,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "134:8:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44886,
        "nodeType": "ImportDirective",
        "src": "171:75:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45185,
        "sourceUnit": 43540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45184,
        "nodeType": "ContractDefinition",
        "src": "248:3286:26",
        "nodes": [
          {
            "id": 44899,
            "nodeType": "StructDefinition",
            "src": "288:195:26",
            "nodes": [],
            "canonicalName": "StrategyFixture.AssetFixture",
            "members": [
              {
                "constant": false,
                "id": 44890,
                "mutability": "mutable",
                "name": "_lpTokenAddress",
                "nameLocation": "326:15:26",
                "nodeType": "VariableDeclaration",
                "scope": 44899,
                "src": "318:23:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44889,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44892,
                "mutability": "mutable",
                "name": "_beefyVaultAddress",
                "nameLocation": "359:18:26",
                "nodeType": "VariableDeclaration",
                "scope": 44899,
                "src": "351:26:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44891,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44894,
                "mutability": "mutable",
                "name": "_yearnVaultAddress",
                "nameLocation": "395:18:26",
                "nodeType": "VariableDeclaration",
                "scope": 44899,
                "src": "387:26:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44893,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44896,
                "mutability": "mutable",
                "name": "_mooWhaleAddress",
                "nameLocation": "431:16:26",
                "nodeType": "VariableDeclaration",
                "scope": 44899,
                "src": "423:24:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44895,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44898,
                "mutability": "mutable",
                "name": "_isBoostedBool",
                "nameLocation": "462:14:26",
                "nodeType": "VariableDeclaration",
                "scope": 44899,
                "src": "457:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 44897,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:4:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AssetFixture",
            "nameLocation": "295:12:26",
            "scope": 45184,
            "visibility": "public"
          },
          {
            "id": 44903,
            "nodeType": "VariableDeclaration",
            "src": "489:35:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "0aa8e873",
            "mutability": "mutable",
            "name": "assetFixtures",
            "nameLocation": "511:13:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44899_storage_$dyn_storage",
              "typeString": "struct StrategyFixture.AssetFixture[]"
            },
            "typeName": {
              "baseType": {
                "id": 44901,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 44900,
                  "name": "AssetFixture",
                  "nameLocations": [
                    "489:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44899,
                  "src": "489:12:26"
                },
                "referencedDeclaration": 44899,
                "src": "489:12:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AssetFixture_$44899_storage_ptr",
                  "typeString": "struct StrategyFixture.AssetFixture"
                }
              },
              "id": 44902,
              "nodeType": "ArrayTypeName",
              "src": "489:14:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44899_storage_$dyn_storage_ptr",
                "typeString": "struct StrategyFixture.AssetFixture[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44907,
            "nodeType": "VariableDeclaration",
            "src": "531:41:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "beb57cdc",
            "mutability": "mutable",
            "name": "lpToken",
            "nameLocation": "565:7:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 44906,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44904,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "539:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "531:26:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44905,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "549:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44911,
            "nodeType": "VariableDeclaration",
            "src": "578:44:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "d0eae461",
            "mutability": "mutable",
            "name": "beefyVault",
            "nameLocation": "612:10:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 44910,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44908,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "586:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "578:26:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44909,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "596:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44915,
            "nodeType": "VariableDeclaration",
            "src": "628:44:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "7a58eb8c",
            "mutability": "mutable",
            "name": "yearnVault",
            "nameLocation": "662:10:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 44914,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44912,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "636:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "628:26:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44913,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "646:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44919,
            "nodeType": "VariableDeclaration",
            "src": "678:42:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e9fea77",
            "mutability": "mutable",
            "name": "mooWhale",
            "nameLocation": "712:8:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 44918,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44916,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "686:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "678:26:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44917,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "696:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44923,
            "nodeType": "VariableDeclaration",
            "src": "726:40:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "e6ddadbf",
            "mutability": "mutable",
            "name": "isBoosted",
            "nameLocation": "757:9:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 44922,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44920,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "734:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "726:23:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44921,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "744:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44929,
            "nodeType": "VariableDeclaration",
            "src": "773:31:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "12d43a51",
            "mutability": "mutable",
            "name": "gov",
            "nameLocation": "788:3:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44924,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "773:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 44927,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:1:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 44926,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "794:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 44925,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:26",
                  "typeDescriptions": {}
                }
              },
              "id": 44928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "794:10:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44935,
            "nodeType": "VariableDeclaration",
            "src": "810:32:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "4f8632ba",
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "825:4:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44930,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 44933,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "840:1:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 44932,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "832:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 44931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:7:26",
                  "typeDescriptions": {}
                }
              },
              "id": 44934,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "832:10:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44937,
            "nodeType": "VariableDeclaration",
            "src": "848:20:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "a6a1858f",
            "mutability": "mutable",
            "name": "whale",
            "nameLocation": "863:5:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44936,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44940,
            "nodeType": "VariableDeclaration",
            "src": "875:78:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "fe0b6578",
            "mutability": "mutable",
            "name": "boost_zap_contract",
            "nameLocation": "890:18:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44938,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834393864396443424231373038653133356264633736456630303766303843426134343737424532",
              "id": 44939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "911:42:26",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x498d9dCBB1708e135bdc76Ef007f08CBa4477BE2"
            },
            "visibility": "public"
          },
          {
            "id": 44943,
            "nodeType": "VariableDeclaration",
            "src": "959:84:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "8af02b65",
            "mutability": "mutable",
            "name": "staking_rewards_contract",
            "nameLocation": "974:24:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "959:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866383132364546303235363531453142333133613638393346636634303334463446346244326141",
              "id": 44942,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1001:42:26",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf8126EF025651E1B313a6893Fcf4034F4F4bD2aA"
            },
            "visibility": "public"
          },
          {
            "id": 44946,
            "nodeType": "VariableDeclaration",
            "src": "1050:29:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "a7a21712",
            "mutability": "mutable",
            "name": "zapper",
            "nameLocation": "1073:6:26",
            "scope": 45184,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
              "typeString": "contract MooVeloLpZapper"
            },
            "typeName": {
              "id": 44945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44944,
                "name": "MooVeloLpZapper",
                "nameLocations": [
                  "1050:15:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44687,
                "src": "1050:15:26"
              },
              "referencedDeclaration": 44687,
              "src": "1050:15:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                "typeString": "contract MooVeloLpZapper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45073,
            "nodeType": "FunctionDefinition",
            "src": "1086:875:26",
            "nodes": [],
            "body": {
              "id": 45072,
              "nodeType": "Block",
              "src": "1118:843:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44949,
                      "name": "_setLpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45095,
                      "src": "1128:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:13:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44951,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:13:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44952,
                      "name": "_setBeefyVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45117,
                      "src": "1151:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44954,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:16:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44955,
                      "name": "_setYearnVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45139,
                      "src": "1177:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44957,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:16:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44958,
                      "name": "_setMooWhale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45161,
                      "src": "1203:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:14:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44960,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:14:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44961,
                      "name": "_setIsBoosted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45183,
                      "src": "1227:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:15:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44963,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:15:26"
                },
                {
                  "assignments": [
                    44969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44969,
                      "mutability": "mutable",
                      "name": "_pairsToTest",
                      "nameLocation": "1278:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 45072,
                      "src": "1261:29:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$3_memory_ptr",
                        "typeString": "string[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44967,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 44968,
                        "length": {
                          "hexValue": "33",
                          "id": 44966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1268:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1261:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$3_storage_ptr",
                          "typeString": "string[3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44974,
                  "initialValue": {
                    "components": [
                      {
                        "hexValue": "616c6574685f77657468",
                        "id": 44970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      {
                        "hexValue": "7374675f75736463",
                        "id": 44971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      {
                        "hexValue": "737573642d75736463",
                        "id": 44972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      }
                    ],
                    "id": 44973,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1293:39:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$3_memory_ptr",
                      "typeString": "string memory[3] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1261:71:26"
                },
                {
                  "expression": {
                    "id": 44981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44975,
                      "name": "zapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44946,
                      "src": "1343:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                        "typeString": "contract MooVeloLpZapper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44979,
                          "name": "boost_zap_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44940,
                          "src": "1372:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1352:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MooVeloLpZapper_$44687_$",
                          "typeString": "function (address) returns (contract MooVeloLpZapper)"
                        },
                        "typeName": {
                          "id": 44977,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44976,
                            "name": "MooVeloLpZapper",
                            "nameLocations": [
                              "1356:15:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44687,
                            "src": "1356:15:26"
                          },
                          "referencedDeclaration": 44687,
                          "src": "1356:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                            "typeString": "contract MooVeloLpZapper"
                          }
                        }
                      },
                      "id": 44980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1352:39:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                        "typeString": "contract MooVeloLpZapper"
                      }
                    },
                    "src": "1343:48:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                      "typeString": "contract MooVeloLpZapper"
                    }
                  },
                  "id": 44982,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:48:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44986,
                        "name": "gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44929,
                        "src": "1424:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44983,
                        "name": "zapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44946,
                        "src": "1401:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                          "typeString": "contract MooVeloLpZapper"
                        }
                      },
                      "id": 44985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1408:15:26",
                      "memberName": "setPairEndorser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44667,
                      "src": "1401:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 44988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44989,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:33:26"
                },
                {
                  "body": {
                    "id": 45049,
                    "nodeType": "Block",
                    "src": "1493:365:26",
                    "statements": [
                      {
                        "assignments": [
                          45002
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45002,
                            "mutability": "mutable",
                            "name": "_pairToTest",
                            "nameLocation": "1521:11:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 45049,
                            "src": "1507:25:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 45001,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1507:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45006,
                        "initialValue": {
                          "baseExpression": {
                            "id": 45003,
                            "name": "_pairsToTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44969,
                            "src": "1535:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$3_memory_ptr",
                              "typeString": "string memory[3] memory"
                            }
                          },
                          "id": 45005,
                          "indexExpression": {
                            "id": 45004,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44991,
                            "src": "1548:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1535:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1507:43:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 45011,
                                    "name": "lpToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44907,
                                    "src": "1596:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                      "typeString": "mapping(string memory => address)"
                                    }
                                  },
                                  "id": 45013,
                                  "indexExpression": {
                                    "id": 45012,
                                    "name": "_pairToTest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45002,
                                    "src": "1604:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1596:20:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 45014,
                                    "name": "beefyVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44911,
                                    "src": "1618:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                      "typeString": "mapping(string memory => address)"
                                    }
                                  },
                                  "id": 45016,
                                  "indexExpression": {
                                    "id": 45015,
                                    "name": "_pairToTest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45002,
                                    "src": "1629:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1618:23:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 45017,
                                    "name": "yearnVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44915,
                                    "src": "1643:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                      "typeString": "mapping(string memory => address)"
                                    }
                                  },
                                  "id": 45019,
                                  "indexExpression": {
                                    "id": 45018,
                                    "name": "_pairToTest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45002,
                                    "src": "1654:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1643:23:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 45020,
                                    "name": "mooWhale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44919,
                                    "src": "1668:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                      "typeString": "mapping(string memory => address)"
                                    }
                                  },
                                  "id": 45022,
                                  "indexExpression": {
                                    "id": 45021,
                                    "name": "_pairToTest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45002,
                                    "src": "1677:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1668:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 45023,
                                    "name": "isBoosted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44923,
                                    "src": "1691:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                      "typeString": "mapping(string memory => bool)"
                                    }
                                  },
                                  "id": 45025,
                                  "indexExpression": {
                                    "id": 45024,
                                    "name": "_pairToTest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45002,
                                    "src": "1701:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1691:22:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 45010,
                                "name": "AssetFixture",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44899,
                                "src": "1583:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_AssetFixture_$44899_storage_ptr_$",
                                  "typeString": "type(struct StrategyFixture.AssetFixture storage pointer)"
                                }
                              },
                              "id": 45026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1583:131:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AssetFixture_$44899_memory_ptr",
                                "typeString": "struct StrategyFixture.AssetFixture memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_AssetFixture_$44899_memory_ptr",
                                "typeString": "struct StrategyFixture.AssetFixture memory"
                              }
                            ],
                            "expression": {
                              "id": 45007,
                              "name": "assetFixtures",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44903,
                              "src": "1564:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AssetFixture_$44899_storage_$dyn_storage",
                                "typeString": "struct StrategyFixture.AssetFixture storage ref[] storage ref"
                              }
                            },
                            "id": 45009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1578:4:26",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1564:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetFixture_$44899_storage_$dyn_storage_ptr_$_t_struct$_AssetFixture_$44899_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetFixture_$44899_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct StrategyFixture.AssetFixture storage ref[] storage pointer,struct StrategyFixture.AssetFixture storage ref)"
                            }
                          },
                          "id": 45027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1564:151:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45028,
                        "nodeType": "ExpressionStatement",
                        "src": "1564:151:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45032,
                              "name": "gov",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44929,
                              "src": "1743:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45029,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "1729:2:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13921",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 45031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1732:10:26",
                            "memberName": "startPrank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13587,
                            "src": "1729:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 45033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1729:18:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45034,
                        "nodeType": "ExpressionStatement",
                        "src": "1729:18:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 45038,
                                "name": "lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44907,
                                "src": "1776:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 45040,
                              "indexExpression": {
                                "id": 45039,
                                "name": "_pairToTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45002,
                                "src": "1784:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1776:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 45041,
                                "name": "beefyVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44911,
                                "src": "1798:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 45043,
                              "indexExpression": {
                                "id": 45042,
                                "name": "_pairToTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45002,
                                "src": "1809:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1798:23:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 45044,
                                "name": "yearnVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44915,
                                "src": "1823:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 45046,
                              "indexExpression": {
                                "id": 45045,
                                "name": "_pairToTest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45002,
                                "src": "1834:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1823:23:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45035,
                              "name": "zapper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44946,
                              "src": "1761:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MooVeloLpZapper_$44687",
                                "typeString": "contract MooVeloLpZapper"
                              }
                            },
                            "id": 45037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1768:7:26",
                            "memberName": "addPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44389,
                            "src": "1761:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address) external"
                            }
                          },
                          "id": 45047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1761:86:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45048,
                        "nodeType": "ExpressionStatement",
                        "src": "1761:86:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44994,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44991,
                      "src": "1463:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 44995,
                        "name": "_pairsToTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44969,
                        "src": "1467:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$3_memory_ptr",
                          "typeString": "string memory[3] memory"
                        }
                      },
                      "id": 44996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1480:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1467:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1463:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45050,
                  "initializationExpression": {
                    "assignments": [
                      44991
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44991,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1456:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 45050,
                        "src": "1450:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 44990,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1450:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 44993,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 44992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1460:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1450:11:26"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 44999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1488:3:26",
                      "subExpression": {
                        "id": 44998,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44991,
                        "src": "1490:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 45000,
                    "nodeType": "ExpressionStatement",
                    "src": "1488:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "1445:413:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45054,
                        "name": "gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44929,
                        "src": "1877:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "476f76",
                        "id": 45055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1882:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da6ae496f7511f911a2fa1acc6ab283d84acf6df1fed4cc2c5dbefa8c0b715fa",
                          "typeString": "literal_string \"Gov\""
                        },
                        "value": "Gov"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da6ae496f7511f911a2fa1acc6ab283d84acf6df1fed4cc2c5dbefa8c0b715fa",
                          "typeString": "literal_string \"Gov\""
                        }
                      ],
                      "expression": {
                        "id": 45051,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1868:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1871:5:26",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12927,
                      "src": "1868:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:20:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45057,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:20:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45061,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44935,
                        "src": "1907:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "55736572",
                        "id": 45062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1913:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59daf22c92a94d3cc0dd1160ba0b142bdd9a54f280fcfa7508a89db52d34fac0",
                          "typeString": "literal_string \"User\""
                        },
                        "value": "User"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59daf22c92a94d3cc0dd1160ba0b142bdd9a54f280fcfa7508a89db52d34fac0",
                          "typeString": "literal_string \"User\""
                        }
                      ],
                      "expression": {
                        "id": 45058,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1898:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1901:5:26",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12927,
                      "src": "1898:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45064,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:22:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45068,
                        "name": "whale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44937,
                        "src": "1939:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5768616c65",
                        "id": 45069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ca62760601ab0f07b42f747c9e5dc6df32bae8d8252b33f626de9d2d0d36bf",
                          "typeString": "literal_string \"Whale\""
                        },
                        "value": "Whale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ca62760601ab0f07b42f747c9e5dc6df32bae8d8252b33f626de9d2d0d36bf",
                          "typeString": "literal_string \"Whale\""
                        }
                      ],
                      "expression": {
                        "id": 45065,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1930:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1933:5:26",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12927,
                      "src": "1930:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:24:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45071,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:24:26"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1095:5:26",
            "parameters": {
              "id": 44947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:2:26"
            },
            "returnParameters": {
              "id": 44948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 45095,
            "nodeType": "FunctionDefinition",
            "src": "1967:318:26",
            "nodes": [],
            "body": {
              "id": 45094,
              "nodeType": "Block",
              "src": "1999:286:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45076,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44907,
                        "src": "2009:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45078,
                      "indexExpression": {
                        "hexValue": "616c6574685f77657468",
                        "id": 45077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2017:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2009:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307861313035353736323333364639326234423864326544433033324130436534356561643632383061",
                      "id": 45079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2033:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xa1055762336F92b4B8d2eDC032A0Ce45ead6280a"
                    },
                    "src": "2009:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45081,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:66:26"
                },
                {
                  "expression": {
                    "id": 45086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45082,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44907,
                        "src": "2085:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45084,
                      "indexExpression": {
                        "hexValue": "7374675f75736463",
                        "id": 45083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2093:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2085:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307835363737306239343237393533393431363835356665323945663134623236343338423565343231",
                      "id": 45085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2107:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x56770b94279539416855fe29Ef14b26438B5e421"
                    },
                    "src": "2085:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45087,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:64:26"
                },
                {
                  "expression": {
                    "id": 45092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45088,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44907,
                        "src": "2159:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45090,
                      "indexExpression": {
                        "hexValue": "737573642d75736463",
                        "id": 45089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2167:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2159:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307836643542413430303634303232366532346235303231346432624262334434446238653665313561",
                      "id": 45091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2182:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x6d5BA400640226e24b50214d2bBb3D4Db8e6e15a"
                    },
                    "src": "2159:65:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45093,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:65:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLpToken",
            "nameLocation": "1976:11:26",
            "parameters": {
              "id": 45074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:2:26"
            },
            "returnParameters": {
              "id": 45075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1999:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45117,
            "nodeType": "FunctionDefinition",
            "src": "2291:336:26",
            "nodes": [],
            "body": {
              "id": 45116,
              "nodeType": "Block",
              "src": "2326:301:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45098,
                        "name": "beefyVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44911,
                        "src": "2336:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45100,
                      "indexExpression": {
                        "hexValue": "616c6574685f77657468",
                        "id": 45099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2347:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2336:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307831413146304462313035304431634144353265454237323337314562464437373136623533613266",
                      "id": 45101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2363:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x1A1F0Db1050D1cAD52eEB72371EbFD7716b53a2f"
                    },
                    "src": "2336:69:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45103,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:69:26"
                },
                {
                  "expression": {
                    "id": 45108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45104,
                        "name": "beefyVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44911,
                        "src": "2415:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45106,
                      "indexExpression": {
                        "hexValue": "7374675f75736463",
                        "id": 45105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2426:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2415:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307844303942356130363530643638416165364231363636654535453737306133383364323941393743",
                      "id": 45107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2440:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xD09B5a0650d68Aae6B1666eE5E770a383d29A97C"
                    },
                    "src": "2415:67:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45109,
                  "nodeType": "ExpressionStatement",
                  "src": "2415:67:26"
                },
                {
                  "expression": {
                    "id": 45114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45110,
                        "name": "beefyVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44911,
                        "src": "2492:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45112,
                      "indexExpression": {
                        "hexValue": "737573642d75736463",
                        "id": 45111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2492:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307831383266653531343432433744363533363065443135313166333062653632363163324332304331",
                      "id": 45113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2518:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x182fe51442C7D65360eD1511f30be6261c2C20C1"
                    },
                    "src": "2492:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45115,
                  "nodeType": "ExpressionStatement",
                  "src": "2492:68:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeefyVault",
            "nameLocation": "2300:14:26",
            "parameters": {
              "id": 45096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:2:26"
            },
            "returnParameters": {
              "id": 45097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45139,
            "nodeType": "FunctionDefinition",
            "src": "2633:336:26",
            "nodes": [],
            "body": {
              "id": 45138,
              "nodeType": "Block",
              "src": "2668:301:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45120,
                        "name": "yearnVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44915,
                        "src": "2678:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45122,
                      "indexExpression": {
                        "hexValue": "616c6574685f77657468",
                        "id": 45121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2689:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2678:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307866374436366234314364343234316561653435306664394432643639393537353436333444396633",
                      "id": 45123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2705:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xf7D66b41Cd4241eae450fd9D2d6995754634D9f3"
                    },
                    "src": "2678:69:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45125,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:69:26"
                },
                {
                  "expression": {
                    "id": 45130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45126,
                        "name": "yearnVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44915,
                        "src": "2757:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45128,
                      "indexExpression": {
                        "hexValue": "7374675f75736463",
                        "id": 45127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2757:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307866364232373231333441313933446635623034333332653733313834453562343062384542383130",
                      "id": 45129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2782:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xf6B272134A193Df5b04332e73184E5b40b8EB810"
                    },
                    "src": "2757:67:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45131,
                  "nodeType": "ExpressionStatement",
                  "src": "2757:67:26"
                },
                {
                  "expression": {
                    "id": 45136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45132,
                        "name": "yearnVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44915,
                        "src": "2834:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45134,
                      "indexExpression": {
                        "hexValue": "737573642d75736463",
                        "id": 45133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2845:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2834:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307831423164324566423630343538353146386363644532343336393030336530664631353739383062",
                      "id": 45135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2860:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x1B1d2EfB6045851F8ccdE24369003e0fF157980b"
                    },
                    "src": "2834:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45137,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:68:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setYearnVault",
            "nameLocation": "2642:14:26",
            "parameters": {
              "id": 45118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2656:2:26"
            },
            "returnParameters": {
              "id": 45119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2668:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45161,
            "nodeType": "FunctionDefinition",
            "src": "2975:330:26",
            "nodes": [],
            "body": {
              "id": 45160,
              "nodeType": "Block",
              "src": "3008:297:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45142,
                        "name": "mooWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44919,
                        "src": "3018:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45144,
                      "indexExpression": {
                        "hexValue": "616c6574685f77657468",
                        "id": 45143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3027:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3018:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307863343766614535366633373032373337423639656436313539353063303132313765633543374338",
                      "id": 45145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3043:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xc47faE56f3702737B69ed615950c01217ec5C7C8"
                    },
                    "src": "3018:67:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45147,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:67:26"
                },
                {
                  "expression": {
                    "id": 45152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45148,
                        "name": "mooWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44919,
                        "src": "3095:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45150,
                      "indexExpression": {
                        "hexValue": "7374675f75736463",
                        "id": 45149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3104:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3095:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307845443838383646394238374630366246374142316134383937383831626438336543463166353245",
                      "id": 45151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3118:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xED8886F9B87F06bF7AB1a4897881bd83eCF1f52E"
                    },
                    "src": "3095:65:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45153,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:65:26"
                },
                {
                  "expression": {
                    "id": 45158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45154,
                        "name": "mooWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44919,
                        "src": "3173:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 45156,
                      "indexExpression": {
                        "hexValue": "737573642d75736463",
                        "id": 45155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3182:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3173:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307830303861373464393664373939623066636661653834363242664646384333374337636363363131",
                      "id": 45157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3197:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x008a74d96d799b0fcfae8462BfFF8C37C7ccc611"
                    },
                    "src": "3173:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45159,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:66:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setMooWhale",
            "nameLocation": "2984:12:26",
            "parameters": {
              "id": 45140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2996:2:26"
            },
            "returnParameters": {
              "id": 45141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45183,
            "nodeType": "FunctionDefinition",
            "src": "3311:221:26",
            "nodes": [],
            "body": {
              "id": 45182,
              "nodeType": "Block",
              "src": "3345:187:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45164,
                        "name": "isBoosted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44923,
                        "src": "3355:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 45166,
                      "indexExpression": {
                        "hexValue": "616c6574685f77657468",
                        "id": 45165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3365:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc50b330f730c7ef5292b0a913c17587d361c81b2071cbc926e134b8bfb8e342",
                          "typeString": "literal_string \"aleth_weth\""
                        },
                        "value": "aleth_weth"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3355:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 45167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3355:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45169,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:30:26"
                },
                {
                  "expression": {
                    "id": 45174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45170,
                        "name": "isBoosted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44923,
                        "src": "3395:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 45172,
                      "indexExpression": {
                        "hexValue": "7374675f75736463",
                        "id": 45171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3405:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d67b5bee17508b0dd896724d8dc2477001ee1febaacf48429e2da3e590463e",
                          "typeString": "literal_string \"stg_usdc\""
                        },
                        "value": "stg_usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3395:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 45173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3419:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3395:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45175,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:28:26"
                },
                {
                  "expression": {
                    "id": 45180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45176,
                        "name": "isBoosted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44923,
                        "src": "3436:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 45178,
                      "indexExpression": {
                        "hexValue": "737573642d75736463",
                        "id": 45177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3446:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2a55c3e9d1122999464345c71871304b35decb1f05482eeb23da16150d9110",
                          "typeString": "literal_string \"susd-usdc\""
                        },
                        "value": "susd-usdc"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3436:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 45179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3461:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3436:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45181,
                  "nodeType": "ExpressionStatement",
                  "src": "3436:30:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setIsBoosted",
            "nameLocation": "3320:13:26",
            "parameters": {
              "id": 45162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3333:2:26"
            },
            "returnParameters": {
              "id": 45163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3345:0:26"
            },
            "scope": 45184,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44887,
              "name": "Test",
              "nameLocations": [
                "276:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12215,
              "src": "276:4:26"
            },
            "id": 44888,
            "nodeType": "InheritanceSpecifier",
            "src": "276:4:26"
          }
        ],
        "canonicalName": "StrategyFixture",
        "contractDependencies": [
          44687
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45184,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "StrategyFixture",
        "nameLocation": "257:15:26",
        "scope": 45185,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 26
}