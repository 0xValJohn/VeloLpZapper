{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_boostZapContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "canEndorse",
          "type": "bool"
        }
      ],
      "name": "ApprovedPairEndorser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "beefyVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "yearnVault",
          "type": "address"
        }
      ],
      "name": "PairAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "zapper",
          "type": "address"
        }
      ],
      "name": "UpdatedZapper",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isStaked",
          "type": "bool"
        }
      ],
      "name": "ZapIn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beefyVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yearnVault",
          "type": "address"
        }
      ],
      "name": "addPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boostZapContract",
      "outputs": [
        {
          "internalType": "contract IZap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumLpTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLpTokenRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairEndorsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endorser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setPairEndorser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_boostZapContract",
          "type": "address"
        }
      ],
      "name": "setZapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lpToken",
          "type": "address"
        }
      ],
      "name": "zap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "985:5588:24:-:0;;;2103:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:18;719:10:23;936:18:18;:32::i;:::-;2152:16:24;:42;;-1:-1:-1;;;;;;2152:42:24;-1:-1:-1;;;;;2152:42:24;;;;;;;;;;985:5588;;2433:187:18;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:18;;;-1:-1:-1;;;;;;2541:17:18;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;:::-;985:5588:24;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "985:5588:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:43;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;634:32:27;;;616:51;;604:2;589:18;1383:43:24;;;;;;;;1174:25;;;;;;:::i;:::-;;:::i;6400:171::-;;;;;;:::i;:::-;;:::i;:::-;;1615:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1280:14:27;;1273:22;1255:41;;1243:2;1228:18;1615:51:24;1115:187:27;3573:1711:24;;;;;;:::i;:::-;;:::i;1831:101:18:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:18;1201:85;;6017:186:24;;;;;;:::i;:::-;;:::i;5638:97::-;5713:8;:15;5638:97;;1963:25:27;;;1951:2;1936:18;5638:97:24;1817:177:27;1249:28:24;;;;;-1:-1:-1;;;;;1249:28:24;;;1501:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2889:678;;;;;;:::i;:::-;;:::i;2081:198:18:-;;;;;;:::i;:::-;;:::i;1383:43:24:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1383:43:24;;-1:-1:-1;1383:43:24;;-1:-1:-1;1383:43:24:o;1174:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1174:25:24;;-1:-1:-1;1174:25:24;:::o;6400:171::-;1094:13:18;:11;:13::i;:::-;6475:16:24::1;:42:::0;;-1:-1:-1;;;;;;6475:42:24::1;-1:-1:-1::0;;;;;6475:42:24;::::1;::::0;;::::1;::::0;;;6532:32:::1;::::0;616:51:27;;;6532:32:24::1;::::0;604:2:27;589:18;6532:32:24::1;;;;;;;6400:171:::0;:::o;3573:1711::-;-1:-1:-1;;;;;3676:15:24;;3651:22;3676:15;;;:5;:15;;;;;;3651:40;;;;;;;;;;;;3676:15;3651:40;;;;-1:-1:-1;;;;;3651:40:24;;;;;;;;;;;;;;;;;;;;;;3702:15;3727:4;3732:1;3727:7;;;;;;;:::i;:::-;;;;;;-1:-1:-1;3745:17:24;3772:4;3777:1;3772:7;;;;3865:30;;-1:-1:-1;;;3865:30:24;;3884:10;3865:30;;;616:51:27;3772:7:24;;-1:-1:-1;3844:18:24;;-1:-1:-1;;;;;3865:18:24;;;;;589::27;;3865:30:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3921:7;;3844:51;;-1:-1:-1;3905:55:24;;3938:8;3844:51;3905:15;:55::i;:::-;3970:60;;-1:-1:-1;;;3970:60:24;;3992:10;3970:60;;;3316:34:27;4012:4:24;3366:18:27;;;3359:43;3418:18;;;3411:34;;;-1:-1:-1;;;;;3970:21:24;;;;;3251:18:27;;3970:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4100:4:24;4105:1;4100:7;;;;-1:-1:-1;;;;;4088:32:24;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4152:41:24;;-1:-1:-1;;;4152:41:24;;4187:4;4152:41;;;616:51:27;4132:17:24;;-1:-1:-1;;;;;;4152:26:24;;;-1:-1:-1;4152:26:24;;589:18:27;;4152:41:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4132:61;;4268:25;4306:16;;;;;;;;;-1:-1:-1;;;;;4306:16:24;-1:-1:-1;;;;;4306:36:24;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4358:7;;;;4296:70;;-1:-1:-1;;;4296:70:24;;-1:-1:-1;;;;;634:32:27;;;4296:70:24;;;616:51:27;4296:61:24;;;;;589:18:27;;4296:70:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4268:98;-1:-1:-1;;;;;;4409:31:24;;4405:873;;4513:7;;;;4497:54;;4530:8;4541:9;4497:15;:54::i;:::-;4577:4;4582:1;4577:7;;;;-1:-1:-1;;;;;4565:28:24;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4687:37:24;;-1:-1:-1;;;4687:37:24;;4717:4;4687:37;;;616:51:27;4665:19:24;;-1:-1:-1;;;;;;4687:20:24;;;-1:-1:-1;4687:20:24;;589:18:27;;4687:37:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4665:59;-1:-1:-1;4738:48:24;-1:-1:-1;;;;;4738:23:24;;4762:10;4665:59;4738:23;:48::i;:::-;4823:7;;;;;4805:46;;;4130:25:27;;;4845:5:24;4171:18:27;;;4164:50;;;;-1:-1:-1;;;;;4805:46:24;;;;4811:10;;4805:46;;4103:18:27;4805:46:24;;;;;;;4442:468;4405:873;;;4954:16;;4930:63;;-1:-1:-1;;;;;4954:16:24;4973:8;4983:9;4930:15;:63::i;:::-;5104:16;;5185:7;;;;5135:69;;-1:-1:-1;;;;;4417:32:27;;;5135:69:24;;;4399:51:27;4466:18;;;4459:34;;;5061:12:24;;;;5104:16;;4372:18:27;;5135:69:24;;;-1:-1:-1;;5135:69:24;;;;;;;;;;;;;;-1:-1:-1;;;;;5135:69:24;-1:-1:-1;;;5135:69:24;;;5096:109;;;5135:69;5096:109;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5242:7:24;;;;;5224:43;;;4130:25:27;;;5247:1:24;4171:18:27;;;4164:50;;;;5224:43:24;;5060:145;;-1:-1:-1;5060:145:24;;-1:-1:-1;;;;;;5224:43:24;;5230:10;;5224:43;;;;;;;;4916:362;;4405:873;3613:1671;;;;;;3573:1711;:::o;1831:101:18:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6017:186:24:-;1094:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;6105:24:24;::::1;;::::0;;;:13:::1;:24;::::0;;;;;;;;:35;;-1:-1:-1;;6105:35:24::1;::::0;::::1;;::::0;;::::1;::::0;;;6155:41;;5219:51:27;;;5286:18;;;5279:50;6155:41:24::1;::::0;5192:18:27;6155:41:24::1;;;;;;;6017:186:::0;;:::o;2889:678::-;2306:10;2292:25;;;;:13;:25;;;;;;;;2284:50;;;;-1:-1:-1;;;2284:50:24;;5542:2:27;2284:50:24;;;5524:21:27;5581:2;5561:18;;;5554:30;-1:-1:-1;;;5600:18:27;;;5593:42;5652:18;;2284:50:24;;;;;;;;;3116:11:::1;-1:-1:-1::0;;;;;3104:30:24::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3069:67:24::1;3081:11;-1:-1:-1::0;;;;;3069:29:24::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3069:67:24::1;;3061:103;;;::::0;-1:-1:-1;;;3061:103:24;;5883:2:27;3061:103:24::1;::::0;::::1;5865:21:27::0;5922:2;5902:18;;;5895:30;5961:25;5941:18;;;5934:53;6004:18;;3061:103:24::1;5681:347:27::0;3061:103:24::1;-1:-1:-1::0;;;;;3215:15:24;;::::1;;::::0;;;:5:::1;:15;::::0;;;;;;;:32;;-1:-1:-1;;;;;;3215:32:24;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;3257:18:24;;::::1;:32:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3371:19:::1;:29:::0;;;;::::1;;3366:134;;3416:8;:23:::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;3416:23:24::1;-1:-1:-1::0;;;;;3416:23:24;::::1;::::0;;::::1;::::0;;;-1:-1:-1;3453:29:24;;;:19:::1;3416:23;3453:29:::0;;;;:36;;-1:-1:-1;;3453:36:24::1;::::0;;::::1;::::0;;3366:134:::1;3515:45;::::0;;-1:-1:-1;;;;;6263:15:27;;;6245:34;;6315:15;;;6310:2;6295:18;;6288:43;3515:45:24;::::1;::::0;::::1;::::0;6180:18:27;3515:45:24::1;;;;;;;2889:678:::0;;;:::o;2081:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:18;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:18;;6544:2:27;2161:73:18::1;::::0;::::1;6526:21:27::0;6583:2;6563:18;;;6556:30;6622:34;6602:18;;;6595:62;-1:-1:-1;;;6673:18:27;;;6666:36;6719:19;;2161:73:18::1;6342:402:27::0;2161:73:18::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:18;719:10:23;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;6951:2:27;1414:68:18;;;6933:21:27;;;6970:18;;;6963:30;7029:34;7009:18;;;7002:62;7081:18;;1414:68:18;6749:356:27;5290:303:24;5390:50;;-1:-1:-1;;;5390:50:24;;5423:4;5390:50;;;6245:34:27;-1:-1:-1;;;;;6315:15:27;;;6295:18;;;6288:43;5443:7:24;;5390:24;;;;;;6180:18:27;;5390:50:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;5386:201;;;5466:40;-1:-1:-1;;;;;5466:26:24;;5493:9;5504:1;5466:26;:40::i;:::-;5520:56;-1:-1:-1;;;;;5520:26:24;;5547:9;-1:-1:-1;;5520:26:24;:56::i;:::-;5290:303;;;:::o;763:205:21:-;902:58;;-1:-1:-1;;;;;4417:32:27;;902:58:21;;;4399:51:27;4466:18;;;4459:34;;;875:86:21;;895:5;;-1:-1:-1;;;925:23:21;4372:18:27;;902:58:21;;;;-1:-1:-1;;902:58:21;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:21;-1:-1:-1;;;;;;902:58:21;;;;;;;;;;875:19;:86::i;2433:187:18:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:18;;;-1:-1:-1;;;;;;2541:17:18;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1475:603:21:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:21;;-1:-1:-1;;;1846:39:21;;1870:4;1846:39;;;6245:34:27;-1:-1:-1;;;;;6315:15:27;;;6295:18;;;6288:43;1846:15:21;;;;;6180:18:27;;1846:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:21;;7312:2:27;1808:163:21;;;7294:21:27;7351:2;7331:18;;;7324:30;7390:34;7370:18;;;7363:62;-1:-1:-1;;;7441:18:27;;;7434:52;7503:19;;1808:163:21;7110:418:27;1808:163:21;2008:62;;-1:-1:-1;;;;;4417:32:27;;2008:62:21;;;4399:51:27;4466:18;;;4459:34;;;1981:90:21;;2001:5;;-1:-1:-1;;;2031:22:21;4372:18:27;;2008:62:21;4225:274:27;3747:706:21;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:21;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:21;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:21;;7735:2:27;4351:85:21;;;7717:21:27;7774:2;7754:18;;;7747:30;7813:34;7793:18;;;7786:62;-1:-1:-1;;;7864:18:27;;;7857:40;7914:19;;4351:85:21;7533:406:27;3861:223:22;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:22;;8146:2:27;5137:81:22;;;8128:21:27;8185:2;8165:18;;;8158:30;8224:34;8204:18;;;8197:62;-1:-1:-1;;;8275:18:27;;;8268:36;8321:19;;5137:81:22;7944:402:27;5137:81:22;-1:-1:-1;;;;;1465:19:22;;;5228:60;;;;-1:-1:-1;;;5228:60:22;;8553:2:27;5228:60:22;;;8535:21:27;8592:2;8572:18;;;8565:30;8631:31;8611:18;;;8604:59;8680:18;;5228:60:22;8351:353:27;5228:60:22;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:22;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:22:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:22;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:22;;;;;;;;:::i;14:131:27:-;-1:-1:-1;;;;;89:31:27;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:27:o;678:180::-;737:6;790:2;778:9;769:7;765:23;761:32;758:52;;;806:1;803;796:12;758:52;-1:-1:-1;829:23:27;;678:180;-1:-1:-1;678:180:27:o;863:247::-;922:6;975:2;963:9;954:7;950:23;946:32;943:52;;;991:1;988;981:12;943:52;1030:9;1017:23;1049:31;1074:5;1049:31;:::i;1307:118::-;1393:5;1386:13;1379:21;1372:5;1369:32;1359:60;;1415:1;1412;1405:12;1430:382;1495:6;1503;1556:2;1544:9;1535:7;1531:23;1527:32;1524:52;;;1572:1;1569;1562:12;1524:52;1611:9;1598:23;1630:31;1655:5;1630:31;:::i;:::-;1680:5;-1:-1:-1;1737:2:27;1722:18;;1709:32;1750:30;1709:32;1750:30;:::i;:::-;1799:7;1789:17;;;1430:382;;;;;:::o;2221:529::-;2298:6;2306;2314;2367:2;2355:9;2346:7;2342:23;2338:32;2335:52;;;2383:1;2380;2373:12;2335:52;2422:9;2409:23;2441:31;2466:5;2441:31;:::i;:::-;2491:5;-1:-1:-1;2548:2:27;2533:18;;2520:32;2561:33;2520:32;2561:33;:::i;:::-;2613:7;-1:-1:-1;2672:2:27;2657:18;;2644:32;2685:33;2644:32;2685:33;:::i;:::-;2737:7;2727:17;;;2221:529;;;;;:::o;2755:127::-;2816:10;2811:3;2807:20;2804:1;2797:31;2847:4;2844:1;2837:15;2871:4;2868:1;2861:15;2887:184;2957:6;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;-1:-1:-1;3049:16:27;;2887:184;-1:-1:-1;2887:184:27:o;3456:245::-;3523:6;3576:2;3564:9;3555:7;3551:23;3547:32;3544:52;;;3592:1;3589;3582:12;3544:52;3624:9;3618:16;3643:28;3665:5;3643:28;:::i;3706:251::-;3776:6;3829:2;3817:9;3808:7;3804:23;3800:32;3797:52;;;3845:1;3842;3835:12;3797:52;3877:9;3871:16;3896:31;3921:5;3896:31;:::i;4504:250::-;4589:1;4599:113;4613:6;4610:1;4607:13;4599:113;;;4689:11;;;4683:18;4670:11;;;4663:39;4635:2;4628:10;4599:113;;;-1:-1:-1;;4746:1:27;4728:16;;4721:27;4504:250::o;4759:287::-;4888:3;4926:6;4920:13;4942:66;5001:6;4996:3;4989:4;4981:6;4977:17;4942:66;:::i;:::-;5024:16;;;;;4759:287;-1:-1:-1;;4759:287:27:o;8709:396::-;8858:2;8847:9;8840:21;8821:4;8890:6;8884:13;8933:6;8928:2;8917:9;8913:18;8906:34;8949:79;9021:6;9016:2;9005:9;9001:18;8996:2;8988:6;8984:15;8949:79;:::i;:::-;9089:2;9068:15;-1:-1:-1;;9064:29:27;9049:45;;;;9096:2;9045:54;;8709:396;-1:-1:-1;;8709:396:27:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addPair(address,address,address)": "f1ec23cf",
    "boostZapContract()": "d003d0f5",
    "getNumLpTokens()": "c9e4f07a",
    "isLpTokenRegistered(address)": "43470f2a",
    "lpTokens(uint256)": "1bb5e2dc",
    "owner()": "8da5cb5b",
    "pairEndorsers(address)": "dc8dddf3",
    "pairs(address,uint256)": "03d40513",
    "renounceOwnership()": "715018a6",
    "setPairEndorser(address,bool)": "ad3d5870",
    "setZapper(address)": "42435175",
    "transferOwnership(address)": "f2fde38b",
    "zap(address)": "510a3383"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boostZapContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canEndorse\",\"type\":\"bool\"}],\"name\":\"ApprovedPairEndorser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beefyVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"yearnVault\",\"type\":\"address\"}],\"name\":\"PairAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"zapper\",\"type\":\"address\"}],\"name\":\"UpdatedZapper\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isStaked\",\"type\":\"bool\"}],\"name\":\"ZapIn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beefyVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yearnVault\",\"type\":\"address\"}],\"name\":\"addPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostZapContract\",\"outputs\":[{\"internalType\":\"contract IZap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumLpTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLpTokenRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pairEndorsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endorser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setPairEndorser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boostZapContract\",\"type\":\"address\"}],\"name\":\"setZapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"zap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPair(address,address,address)\":{\"details\":\"Throws if governance isn't set properly.     Throws if sender isn't allowed to endorse.     Throws if replacement is handled improperly.     Emits a PairAdded event.\",\"params\":{\"_beefyVault\":\"The vault token from beefy.\",\"_lpToken\":\"The address of the new lp token.\",\"_yearnVault\":\"The vault token from yearn.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPairEndorser(address,bool)\":{\"details\":\"Throws if caller is not owner.\",\"params\":{\"_allowed\":\"Allowed to endorse\",\"_endorser\":\"The address to approve or deny access.\"}},\"setZapper(address)\":{\"details\":\"Throws if caller is not owner.\",\"params\":{\"_boostZapContract\":\"The address to use as pool registry.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPair(address,address,address)\":{\"notice\":\"Add a new pair to our registry, for new or existing lp tokens.\"},\"boostZapContract()\":{\"notice\":\"The OP boost zap contract.\"},\"isLpTokenRegistered(address)\":{\"notice\":\"Check if an lp token exists for a given pair.\"},\"lpTokens(uint256)\":{\"notice\":\"LP tokens that the registry has added pairs for.\"},\"pairEndorsers(address)\":{\"notice\":\"Check if an address can add pairs to this registry.\"},\"pairs(address,uint256)\":{\"notice\":\"If a beefy-vault/yearn-vault pair exists for a given token, it will be shown here.\"},\"setPairEndorser(address,bool)\":{\"notice\":\"Set the ability of an address to endorse a pair.\"},\"setZapper(address)\":{\"notice\":\"Set the registry for pulling our staking pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MooVeloLpZapper.sol\":\"MooVeloLpZapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/MooVeloLpZapper.sol\":{\"keccak256\":\"0x5b5375ab406149bba47c4932762fdba916fcd2859040b2e6a1b2f75cb7e3566a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://74925361b980e8feb2b8026c5aec79ea8a991e5f0afef80180242d04c604862b\",\"dweb:/ipfs/QmdJWBFwPmDFEQXRTvsKcMnzz3Sf2T7YkpNafom9cQT7eM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_boostZapContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "canEndorse",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovedPairEndorser",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lpToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "beefyVault",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "yearnVault",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PairAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Recovered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "zapper",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedZapper",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isStaked",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZapIn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lpToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_beefyVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_yearnVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPair"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "boostZapContract",
          "outputs": [
            {
              "internalType": "contract IZap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumLpTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLpTokenRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pairEndorsers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pairs",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_endorser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_allowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPairEndorser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_boostZapContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZapper"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lpToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "zap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addPair(address,address,address)": {
            "details": "Throws if governance isn't set properly.     Throws if sender isn't allowed to endorse.     Throws if replacement is handled improperly.     Emits a PairAdded event.",
            "params": {
              "_beefyVault": "The vault token from beefy.",
              "_lpToken": "The address of the new lp token.",
              "_yearnVault": "The vault token from yearn."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setPairEndorser(address,bool)": {
            "details": "Throws if caller is not owner.",
            "params": {
              "_allowed": "Allowed to endorse",
              "_endorser": "The address to approve or deny access."
            }
          },
          "setZapper(address)": {
            "details": "Throws if caller is not owner.",
            "params": {
              "_boostZapContract": "The address to use as pool registry."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addPair(address,address,address)": {
            "notice": "Add a new pair to our registry, for new or existing lp tokens."
          },
          "boostZapContract()": {
            "notice": "The OP boost zap contract."
          },
          "isLpTokenRegistered(address)": {
            "notice": "Check if an lp token exists for a given pair."
          },
          "lpTokens(uint256)": {
            "notice": "LP tokens that the registry has added pairs for."
          },
          "pairEndorsers(address)": {
            "notice": "Check if an address can add pairs to this registry."
          },
          "pairs(address,uint256)": {
            "notice": "If a beefy-vault/yearn-vault pair exists for a given token, it will be shown here."
          },
          "setPairEndorser(address,bool)": {
            "notice": "Set the ability of an address to endorse a pair."
          },
          "setZapper(address)": {
            "notice": "Set the registry for pulling our staking pools."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-4.7.1/=lib/openzeppelin-contracts-4.7.1/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MooVeloLpZapper.sol": "MooVeloLpZapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-4.7.1/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/MooVeloLpZapper.sol": {
        "keccak256": "0x5b5375ab406149bba47c4932762fdba916fcd2859040b2e6a1b2f75cb7e3566a",
        "urls": [
          "bzz-raw://74925361b980e8feb2b8026c5aec79ea8a991e5f0afef80180242d04c604862b",
          "dweb:/ipfs/QmdJWBFwPmDFEQXRTvsKcMnzz3Sf2T7YkpNafom9cQT7eM"
        ],
        "license": "AGPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MooVeloLpZapper.sol",
    "id": 44678,
    "exportedSymbols": {
      "Address": [
        44151
      ],
      "Context": [
        44173
      ],
      "IBeefyVault": [
        44190
      ],
      "IERC20": [
        43539
      ],
      "IERC20Permit": [
        43575
      ],
      "IRegistry": [
        44209
      ],
      "IStakingRewards": [
        44217
      ],
      "IYearnVault": [
        44201
      ],
      "IZap": [
        44232
      ],
      "MooVeloLpZapper": [
        44677
      ],
      "Ownable": [
        43461
      ],
      "SafeERC20": [
        43856
      ],
      "Test": [
        12215
      ],
      "console2": [
        30110
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:6537:24",
    "nodes": [
      {
        "id": 44175,
        "nodeType": "PragmaDirective",
        "src": "37:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 44176,
        "nodeType": "ImportDirective",
        "src": "63:71:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44678,
        "sourceUnit": 43462,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44177,
        "nodeType": "ImportDirective",
        "src": "135:75:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44678,
        "sourceUnit": 43540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44178,
        "nodeType": "ImportDirective",
        "src": "211:84:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "lib/openzeppelin-contracts-4.7.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44678,
        "sourceUnit": 43857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44181,
        "nodeType": "ImportDirective",
        "src": "296:50:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44678,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44179,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "304:4:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44180,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "310:8:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44190,
        "nodeType": "ContractDefinition",
        "src": "364:115:24",
        "nodes": [
          {
            "id": 44186,
            "nodeType": "FunctionDefinition",
            "src": "392:48:24",
            "nodes": [],
            "functionSelector": "1f1fcd51",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "want",
            "nameLocation": "401:4:24",
            "parameters": {
              "id": 44182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:24"
            },
            "returnParameters": {
              "id": 44185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44186,
                  "src": "431:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:9:24"
            },
            "scope": 44190,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44189,
            "nodeType": "FunctionDefinition",
            "src": "445:32:24",
            "nodes": [],
            "functionSelector": "853828b6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "454:11:24",
            "parameters": {
              "id": 44187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "465:2:24"
            },
            "returnParameters": {
              "id": 44188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:24"
            },
            "scope": 44190,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeefyVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44190
        ],
        "name": "IBeefyVault",
        "nameLocation": "374:11:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44201,
        "nodeType": "ContractDefinition",
        "src": "481:122:24",
        "nodes": [
          {
            "id": 44197,
            "nodeType": "FunctionDefinition",
            "src": "519:49:24",
            "nodes": [],
            "functionSelector": "fc0c546a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "528:5:24",
            "parameters": {
              "id": 44193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:24"
            },
            "returnParameters": {
              "id": 44196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44197,
                  "src": "559:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:9:24"
            },
            "scope": 44201,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44200,
            "nodeType": "FunctionDefinition",
            "src": "573:28:24",
            "nodes": [],
            "functionSelector": "d0e30db0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "582:7:24",
            "parameters": {
              "id": 44198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:2:24"
            },
            "returnParameters": {
              "id": 44199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:24"
            },
            "scope": 44201,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44191,
              "name": "IERC20",
              "nameLocations": [
                "506:6:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43539,
              "src": "506:6:24"
            },
            "id": 44192,
            "nodeType": "InheritanceSpecifier",
            "src": "506:6:24"
          }
        ],
        "canonicalName": "IYearnVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44201,
          43539
        ],
        "name": "IYearnVault",
        "nameLocation": "491:11:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": [
          43473,
          43482
        ]
      },
      {
        "id": 44209,
        "nodeType": "ContractDefinition",
        "src": "605:96:24",
        "nodes": [
          {
            "id": 44208,
            "nodeType": "FunctionDefinition",
            "src": "631:68:24",
            "nodes": [],
            "functionSelector": "8dddb3e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakingPool",
            "nameLocation": "640:11:24",
            "parameters": {
              "id": 44204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44203,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "660:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44208,
                  "src": "652:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:15:24"
            },
            "returnParameters": {
              "id": 44207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44208,
                  "src": "690:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:9:24"
            },
            "scope": 44209,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44209
        ],
        "name": "IRegistry",
        "nameLocation": "615:9:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44217,
        "nodeType": "ContractDefinition",
        "src": "703:96:24",
        "nodes": [
          {
            "id": 44216,
            "nodeType": "FunctionDefinition",
            "src": "735:62:24",
            "nodes": [],
            "functionSelector": "2ee40908",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nameLocation": "744:8:24",
            "parameters": {
              "id": 44214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44211,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "761:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44216,
                  "src": "753:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44213,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "780:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44216,
                  "src": "772:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:35:24"
            },
            "returnParameters": {
              "id": 44215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:24"
            },
            "scope": 44217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStakingRewards",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44217
        ],
        "name": "IStakingRewards",
        "nameLocation": "713:15:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44232,
        "nodeType": "ContractDefinition",
        "src": "801:182:24",
        "nodes": [
          {
            "id": 44222,
            "nodeType": "FunctionDefinition",
            "src": "822:63:24",
            "nodes": [],
            "functionSelector": "f59e3de7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakingPoolRegistry",
            "nameLocation": "831:19:24",
            "parameters": {
              "id": 44218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:24"
            },
            "returnParameters": {
              "id": 44221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44222,
                  "src": "876:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:24"
            },
            "scope": 44232,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44231,
            "nodeType": "FunctionDefinition",
            "src": "890:91:24",
            "nodes": [],
            "functionSelector": "dad4cd52",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapIn",
            "nameLocation": "899:5:24",
            "parameters": {
              "id": 44227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44224,
                  "mutability": "mutable",
                  "name": "_targetVault",
                  "nameLocation": "913:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44231,
                  "src": "905:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44226,
                  "mutability": "mutable",
                  "name": "_underlyingAmount",
                  "nameLocation": "935:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44231,
                  "src": "927:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:49:24"
            },
            "returnParameters": {
              "id": 44230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44231,
                  "src": "972:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:9:24"
            },
            "scope": 44232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IZap",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44232
        ],
        "name": "IZap",
        "nameLocation": "811:4:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 44677,
        "nodeType": "ContractDefinition",
        "src": "985:5588:24",
        "nodes": [
          {
            "id": 44238,
            "nodeType": "UsingForDirective",
            "src": "1027:27:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44235,
              "name": "SafeERC20",
              "nameLocations": [
                "1033:9:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43856,
              "src": "1033:9:24"
            },
            "typeName": {
              "id": 44237,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44236,
                "name": "IERC20",
                "nameLocations": [
                  "1047:6:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43539,
                "src": "1047:6:24"
              },
              "referencedDeclaration": 43539,
              "src": "1047:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43539",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 44242,
            "nodeType": "VariableDeclaration",
            "src": "1174:25:24",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44239,
              "nodeType": "StructuredDocumentation",
              "src": "1109:60:24",
              "text": "@notice LP tokens that the registry has added pairs for."
            },
            "functionSelector": "1bb5e2dc",
            "mutability": "mutable",
            "name": "lpTokens",
            "nameLocation": "1191:8:24",
            "scope": 44677,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 44240,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1174:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 44241,
              "nodeType": "ArrayTypeName",
              "src": "1174:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44246,
            "nodeType": "VariableDeclaration",
            "src": "1249:28:24",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44243,
              "nodeType": "StructuredDocumentation",
              "src": "1206:38:24",
              "text": "@notice The OP boost zap contract."
            },
            "functionSelector": "d003d0f5",
            "mutability": "mutable",
            "name": "boostZapContract",
            "nameLocation": "1261:16:24",
            "scope": 44677,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IZap_$44232",
              "typeString": "contract IZap"
            },
            "typeName": {
              "id": 44245,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44244,
                "name": "IZap",
                "nameLocations": [
                  "1249:4:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44232,
                "src": "1249:4:24"
              },
              "referencedDeclaration": 44232,
              "src": "1249:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IZap_$44232",
                "typeString": "contract IZap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44253,
            "nodeType": "VariableDeclaration",
            "src": "1383:43:24",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44247,
              "nodeType": "StructuredDocumentation",
              "src": "1284:94:24",
              "text": "@notice If a beefy-vault/yearn-vault pair exists for a given token, it will be shown here."
            },
            "functionSelector": "03d40513",
            "mutability": "mutable",
            "name": "pairs",
            "nameLocation": "1421:5:24",
            "scope": 44677,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$2_storage_$",
              "typeString": "mapping(address => address[2])"
            },
            "typeName": {
              "id": 44252,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44248,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1391:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1383:30:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$2_storage_$",
                "typeString": "mapping(address => address[2])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 44249,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1402:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 44251,
                "length": {
                  "hexValue": "32",
                  "id": 44250,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1410:1:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "ArrayTypeName",
                "src": "1402:10:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                  "typeString": "address[2]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44258,
            "nodeType": "VariableDeclaration",
            "src": "1501:45:24",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44254,
              "nodeType": "StructuredDocumentation",
              "src": "1433:63:24",
              "text": "@notice Check if an address can add pairs to this registry."
            },
            "functionSelector": "dc8dddf3",
            "mutability": "mutable",
            "name": "pairEndorsers",
            "nameLocation": "1533:13:24",
            "scope": 44677,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 44257,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44255,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1509:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1501:24:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44256,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1520:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44263,
            "nodeType": "VariableDeclaration",
            "src": "1615:51:24",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44259,
              "nodeType": "StructuredDocumentation",
              "src": "1553:57:24",
              "text": "@notice Check if an lp token exists for a given pair."
            },
            "functionSelector": "43470f2a",
            "mutability": "mutable",
            "name": "isLpTokenRegistered",
            "nameLocation": "1647:19:24",
            "scope": 44677,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 44262,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1623:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1615:24:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44261,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1634:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44273,
            "nodeType": "EventDefinition",
            "src": "1713:94:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e96c9e409dfdd43a71a9f555abb561716d5a3b7cb5503aef39c3b19e435638bc",
            "name": "ZapIn",
            "nameLocation": "1719:5:24",
            "parameters": {
              "id": 44272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44265,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1741:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44273,
                  "src": "1725:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44267,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetVault",
                  "nameLocation": "1763:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44273,
                  "src": "1747:27:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1784:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44273,
                  "src": "1776:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44271,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isStaked",
                  "nameLocation": "1797:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44273,
                  "src": "1792:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:82:24"
            }
          },
          {
            "id": 44281,
            "nodeType": "EventDefinition",
            "src": "1812:81:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7f46075c67ca5bbd3aaf82d8e324282141f27b7cba3376e5498a6b70c9931c2a",
            "name": "PairAdded",
            "nameLocation": "1818:9:24",
            "parameters": {
              "id": 44280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44275,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "1844:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44281,
                  "src": "1828:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44277,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "beefyVault",
                  "nameLocation": "1861:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44281,
                  "src": "1853:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44279,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "yearnVault",
                  "nameLocation": "1881:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44281,
                  "src": "1873:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:65:24"
            }
          },
          {
            "id": 44287,
            "nodeType": "EventDefinition",
            "src": "1898:47:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28",
            "name": "Recovered",
            "nameLocation": "1904:9:24",
            "parameters": {
              "id": 44286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44283,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1922:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44287,
                  "src": "1914:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1937:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44287,
                  "src": "1929:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1913:31:24"
            }
          },
          {
            "id": 44293,
            "nodeType": "EventDefinition",
            "src": "1950:61:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "76b0b705fe5def0b2d1a1c29a7b39c0d71d957ff92b1cbfc130a3d834af95710",
            "name": "ApprovedPairEndorser",
            "nameLocation": "1956:20:24",
            "parameters": {
              "id": 44292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1985:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44293,
                  "src": "1977:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "canEndorse",
                  "nameLocation": "1999:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44293,
                  "src": "1994:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:34:24"
            }
          },
          {
            "id": 44297,
            "nodeType": "EventDefinition",
            "src": "2016:36:24",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e0e7227de5ec204691b2be349b6bc66860230c83e2ae37bf1939ed8b01fc5b56",
            "name": "UpdatedZapper",
            "nameLocation": "2022:13:24",
            "parameters": {
              "id": 44296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "zapper",
                  "nameLocation": "2044:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44297,
                  "src": "2036:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2035:16:24"
            }
          },
          {
            "id": 44309,
            "nodeType": "FunctionDefinition",
            "src": "2103:98:24",
            "nodes": [],
            "body": {
              "id": 44308,
              "nodeType": "Block",
              "src": "2142:59:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44302,
                      "name": "boostZapContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44246,
                      "src": "2152:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IZap_$44232",
                        "typeString": "contract IZap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44304,
                          "name": "_boostZapContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44299,
                          "src": "2176:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44303,
                        "name": "IZap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44232,
                        "src": "2171:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IZap_$44232_$",
                          "typeString": "type(contract IZap)"
                        }
                      },
                      "id": 44305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2171:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IZap_$44232",
                        "typeString": "contract IZap"
                      }
                    },
                    "src": "2152:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZap_$44232",
                      "typeString": "contract IZap"
                    }
                  },
                  "id": 44307,
                  "nodeType": "ExpressionStatement",
                  "src": "2152:42:24"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44299,
                  "mutability": "mutable",
                  "name": "_boostZapContract",
                  "nameLocation": "2123:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44309,
                  "src": "2115:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:27:24"
            },
            "returnParameters": {
              "id": 44301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44321,
            "nodeType": "ModifierDefinition",
            "src": "2250:102:24",
            "nodes": [],
            "body": {
              "id": 44320,
              "nodeType": "Block",
              "src": "2274:78:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44312,
                          "name": "pairEndorsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44258,
                          "src": "2292:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 44315,
                        "indexExpression": {
                          "expression": {
                            "id": 44313,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2306:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2310:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2306:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2292:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 44316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2319:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 44311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2284:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44318,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:50:24"
                },
                {
                  "id": 44319,
                  "nodeType": "PlaceholderStatement",
                  "src": "2344:1:24"
                }
              ]
            },
            "name": "onlyApproved",
            "nameLocation": "2259:12:24",
            "parameters": {
              "id": 44310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:2:24"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44389,
            "nodeType": "FunctionDefinition",
            "src": "2889:678:24",
            "nodes": [],
            "body": {
              "id": 44388,
              "nodeType": "Block",
              "src": "2988:579:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44335,
                                  "name": "_beefyVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44326,
                                  "src": "3081:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44334,
                                "name": "IBeefyVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44190,
                                "src": "3069:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBeefyVault_$44190_$",
                                  "typeString": "type(contract IBeefyVault)"
                                }
                              },
                              "id": 44336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3069:24:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBeefyVault_$44190",
                                "typeString": "contract IBeefyVault"
                              }
                            },
                            "id": 44337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3094:4:24",
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44186,
                            "src": "3069:29:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 44338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3069:31:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44340,
                                  "name": "_yearnVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44328,
                                  "src": "3116:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44339,
                                "name": "IYearnVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44201,
                                "src": "3104:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IYearnVault_$44201_$",
                                  "typeString": "type(contract IYearnVault)"
                                }
                              },
                              "id": 44341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3104:24:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYearnVault_$44201",
                                "typeString": "contract IYearnVault"
                              }
                            },
                            "id": 44342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3129:5:24",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44197,
                            "src": "3104:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 44343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:32:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3069:67:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c7020746f6b656e20646f6573206e6f74206d61746368",
                        "id": 44345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3138:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eb1d0c4b585c19388ad1d42f19f43c3a42803467f29fbd2b22054718a4a4bc9",
                          "typeString": "literal_string \"lp token does not match\""
                        },
                        "value": "lp token does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eb1d0c4b585c19388ad1d42f19f43c3a42803467f29fbd2b22054718a4a4bc9",
                          "typeString": "literal_string \"lp token does not match\""
                        }
                      ],
                      "id": 44333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3061:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3061:103:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44347,
                  "nodeType": "ExpressionStatement",
                  "src": "3061:103:24"
                },
                {
                  "expression": {
                    "id": 44354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 44348,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44253,
                          "src": "3215:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$2_storage_$",
                            "typeString": "mapping(address => address[2] storage ref)"
                          }
                        },
                        "id": 44351,
                        "indexExpression": {
                          "id": 44349,
                          "name": "_lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44324,
                          "src": "3221:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3215:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage",
                          "typeString": "address[2] storage ref"
                        }
                      },
                      "id": 44352,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3231:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3215:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44353,
                      "name": "_beefyVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44326,
                      "src": "3236:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3215:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44355,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:32:24"
                },
                {
                  "expression": {
                    "id": 44362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 44356,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44253,
                          "src": "3257:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$2_storage_$",
                            "typeString": "mapping(address => address[2] storage ref)"
                          }
                        },
                        "id": 44359,
                        "indexExpression": {
                          "id": 44357,
                          "name": "_lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44324,
                          "src": "3263:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3257:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage",
                          "typeString": "address[2] storage ref"
                        }
                      },
                      "id": 44360,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3273:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3257:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44361,
                      "name": "_yearnVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44328,
                      "src": "3278:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3257:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44363,
                  "nodeType": "ExpressionStatement",
                  "src": "3257:32:24"
                },
                {
                  "condition": {
                    "id": 44367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3370:30:24",
                    "subExpression": {
                      "baseExpression": {
                        "id": 44364,
                        "name": "isLpTokenRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44263,
                        "src": "3371:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 44366,
                      "indexExpression": {
                        "id": 44365,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44324,
                        "src": "3391:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3371:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44381,
                  "nodeType": "IfStatement",
                  "src": "3366:134:24",
                  "trueBody": {
                    "id": 44380,
                    "nodeType": "Block",
                    "src": "3402:98:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44371,
                              "name": "_lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44324,
                              "src": "3430:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44368,
                              "name": "lpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44242,
                              "src": "3416:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 44370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3425:4:24",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3416:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 44372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3416:23:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44373,
                        "nodeType": "ExpressionStatement",
                        "src": "3416:23:24"
                      },
                      {
                        "expression": {
                          "id": 44378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 44374,
                              "name": "isLpTokenRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44263,
                              "src": "3453:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 44376,
                            "indexExpression": {
                              "id": 44375,
                              "name": "_lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44324,
                              "src": "3473:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3453:29:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 44377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3485:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3453:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44379,
                        "nodeType": "ExpressionStatement",
                        "src": "3453:36:24"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44383,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44324,
                        "src": "3525:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44384,
                        "name": "_beefyVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44326,
                        "src": "3535:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44385,
                        "name": "_yearnVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44328,
                        "src": "3548:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44382,
                      "name": "PairAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44281,
                      "src": "3515:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 44386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44387,
                  "nodeType": "EmitStatement",
                  "src": "3510:50:24"
                }
              ]
            },
            "documentation": {
              "id": 44322,
              "nodeType": "StructuredDocumentation",
              "src": "2410:474:24",
              "text": " @notice\n     Add a new pair to our registry, for new or existing lp tokens.\n @dev\n     Throws if governance isn't set properly.\n     Throws if sender isn't allowed to endorse.\n     Throws if replacement is handled improperly.\n     Emits a PairAdded event.\n @param _lpToken The address of the new lp token.\n @param _beefyVault The vault token from beefy.\n @param _yearnVault The vault token from yearn."
            },
            "functionSelector": "f1ec23cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44330,
                  "name": "onlyApproved",
                  "nameLocations": [
                    "2975:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44321,
                  "src": "2975:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2975:12:24"
              }
            ],
            "name": "addPair",
            "nameLocation": "2898:7:24",
            "parameters": {
              "id": 44329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44324,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2914:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44389,
                  "src": "2906:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44326,
                  "mutability": "mutable",
                  "name": "_beefyVault",
                  "nameLocation": "2932:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44389,
                  "src": "2924:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44328,
                  "mutability": "mutable",
                  "name": "_yearnVault",
                  "nameLocation": "2953:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44389,
                  "src": "2945:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:60:24"
            },
            "returnParameters": {
              "id": 44332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44582,
            "nodeType": "FunctionDefinition",
            "src": "3573:1711:24",
            "nodes": [],
            "body": {
              "id": 44581,
              "nodeType": "Block",
              "src": "3613:1671:24",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44399,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "3669:4:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "3651:22:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3651:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44398,
                        "length": {
                          "hexValue": "32",
                          "id": 44396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3659:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "3651:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44403,
                  "initialValue": {
                    "baseExpression": {
                      "id": 44400,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44253,
                      "src": "3676:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$2_storage_$",
                        "typeString": "mapping(address => address[2] storage ref)"
                      }
                    },
                    "id": 44402,
                    "indexExpression": {
                      "id": 44401,
                      "name": "_lpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44391,
                      "src": "3682:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3676:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage",
                      "typeString": "address[2] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3651:40:24"
                },
                {
                  "assignments": [
                    44406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44406,
                      "mutability": "mutable",
                      "name": "mooToken",
                      "nameLocation": "3709:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "3702:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43539",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 44405,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44404,
                          "name": "IERC20",
                          "nameLocations": [
                            "3702:6:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43539,
                          "src": "3702:6:24"
                        },
                        "referencedDeclaration": 43539,
                        "src": "3702:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43539",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44412,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44408,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44399,
                          "src": "3727:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        "id": 44410,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3732:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3727:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44407,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43539,
                      "src": "3720:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 44411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3720:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43539",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3702:33:24"
                },
                {
                  "assignments": [
                    44415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44415,
                      "mutability": "mutable",
                      "name": "yearnToken",
                      "nameLocation": "3752:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "3745:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43539",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 44414,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44413,
                          "name": "IERC20",
                          "nameLocations": [
                            "3745:6:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43539,
                          "src": "3745:6:24"
                        },
                        "referencedDeclaration": 43539,
                        "src": "3745:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43539",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44421,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44417,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44399,
                          "src": "3772:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        "id": 44419,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 44418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3772:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44416,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43539,
                      "src": "3765:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 44420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43539",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3745:35:24"
                },
                {
                  "assignments": [
                    44423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44423,
                      "mutability": "mutable",
                      "name": "mooBalance",
                      "nameLocation": "3852:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "3844:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3844:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44429,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44426,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3884:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3888:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3884:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44424,
                        "name": "mooToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44406,
                        "src": "3865:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43539",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3874:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43496,
                      "src": "3865:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3865:30:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3844:51:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44431,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44399,
                          "src": "3921:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        "id": 44433,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3926:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3921:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44436,
                            "name": "mooToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44406,
                            "src": "3938:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$43539",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$43539",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 44435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3930:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3930:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3930:17:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44438,
                        "name": "mooBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44423,
                        "src": "3949:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44430,
                      "name": "_checkAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44626,
                      "src": "3905:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 44439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44440,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:55:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3992:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3996:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3992:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44448,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4012:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                              "typeString": "contract MooVeloLpZapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                              "typeString": "contract MooVeloLpZapper"
                            }
                          ],
                          "id": 44447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4004:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4004:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4004:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44450,
                        "name": "mooBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44423,
                        "src": "4019:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44441,
                        "name": "mooToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44406,
                        "src": "3970:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43539",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3979:12:24",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43538,
                      "src": "3970:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3970:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44452,
                  "nodeType": "ExpressionStatement",
                  "src": "3970:60:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 44454,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44399,
                              "src": "4100:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            },
                            "id": 44456,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 44455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4105:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4100:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44453,
                          "name": "IBeefyVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44190,
                          "src": "4088:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeefyVault_$44190_$",
                            "typeString": "type(contract IBeefyVault)"
                          }
                        },
                        "id": 44457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4088:20:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeefyVault_$44190",
                          "typeString": "contract IBeefyVault"
                        }
                      },
                      "id": 44458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4109:11:24",
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44189,
                      "src": "4088:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:34:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44460,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:34:24"
                },
                {
                  "assignments": [
                    44462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44462,
                      "mutability": "mutable",
                      "name": "lpBalance",
                      "nameLocation": "4140:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "4132:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44461,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4132:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44472,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44469,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4187:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                              "typeString": "contract MooVeloLpZapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                              "typeString": "contract MooVeloLpZapper"
                            }
                          ],
                          "id": 44468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4179:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4179:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4179:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 44464,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44391,
                            "src": "4159:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44463,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43539,
                          "src": "4152:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 44465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4152:16:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43539",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4169:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43496,
                      "src": "4152:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4152:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4132:61:24"
                },
                {
                  "assignments": [
                    44474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44474,
                      "mutability": "mutable",
                      "name": "_vaultStakingPool",
                      "nameLocation": "4276:17:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 44581,
                      "src": "4268:25:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 44473,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4268:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44485,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 44481,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44399,
                          "src": "4358:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                            "typeString": "address[2] memory"
                          }
                        },
                        "id": 44483,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 44482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4363:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4358:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44476,
                                "name": "boostZapContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44246,
                                "src": "4306:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IZap_$44232",
                                  "typeString": "contract IZap"
                                }
                              },
                              "id": 44477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4323:19:24",
                              "memberName": "stakingPoolRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44222,
                              "src": "4306:36:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 44478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4306:38:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44475,
                          "name": "IRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44209,
                          "src": "4296:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRegistry_$44209_$",
                            "typeString": "type(contract IRegistry)"
                          }
                        },
                        "id": 44479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:49:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$44209",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "id": 44480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4346:11:24",
                      "memberName": "stakingPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44208,
                      "src": "4296:61:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 44484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4296:70:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4268:98:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44486,
                      "name": "_vaultStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44474,
                      "src": "4409:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 44489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4438:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 44488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4430:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4430:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4430:10:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4409:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44579,
                    "nodeType": "Block",
                    "src": "4916:362:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44544,
                                  "name": "boostZapContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44246,
                                  "src": "4954:16:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IZap_$44232",
                                    "typeString": "contract IZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IZap_$44232",
                                    "typeString": "contract IZap"
                                  }
                                ],
                                "id": 44543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4946:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44542,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4946:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:25:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44546,
                              "name": "_lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44391,
                              "src": "4973:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44547,
                              "name": "lpBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44462,
                              "src": "4983:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44541,
                            "name": "_checkAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44626,
                            "src": "4930:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 44548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4930:63:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44549,
                        "nodeType": "ExpressionStatement",
                        "src": "4930:63:24"
                      },
                      {
                        "assignments": [
                          44551,
                          44553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44551,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5066:7:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 44579,
                            "src": "5061:12:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 44550,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5061:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 44553,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "5088:4:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 44579,
                            "src": "5075:17:24",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 44552,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5075:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44568,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "7a6170496e28616464726573732c75696e7432353629",
                                  "id": 44561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5159:24:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_dad4cd52b65c04ae6256ddaa5e509013959f1f61f78004ee8bc936b0d6064990",
                                    "typeString": "literal_string \"zapIn(address,uint256)\""
                                  },
                                  "value": "zapIn(address,uint256)"
                                },
                                {
                                  "baseExpression": {
                                    "id": 44562,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44399,
                                    "src": "5185:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                      "typeString": "address[2] memory"
                                    }
                                  },
                                  "id": 44564,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 44563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5190:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5185:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 44565,
                                  "name": "lpBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44462,
                                  "src": "5194:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_dad4cd52b65c04ae6256ddaa5e509013959f1f61f78004ee8bc936b0d6064990",
                                    "typeString": "literal_string \"zapIn(address,uint256)\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 44559,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5135:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 44560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5139:19:24",
                                "memberName": "encodeWithSignature",
                                "nodeType": "MemberAccess",
                                "src": "5135:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (bytes memory)"
                                }
                              },
                              "id": 44566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5135:69:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44556,
                                  "name": "boostZapContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44246,
                                  "src": "5104:16:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IZap_$44232",
                                    "typeString": "contract IZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IZap_$44232",
                                    "typeString": "contract IZap"
                                  }
                                ],
                                "id": 44555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5096:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44554,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5096:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5096:25:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 44558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5122:12:24",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "5096:38:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 44567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5096:109:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5060:145:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44570,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5230:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5234:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5230:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 44572,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44399,
                                "src": "5242:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 44574,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 44573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5247:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5242:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44575,
                              "name": "lpBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44462,
                              "src": "5251:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 44576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5262:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 44569,
                            "name": "ZapIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44273,
                            "src": "5224:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 44577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5224:43:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44578,
                        "nodeType": "EmitStatement",
                        "src": "5219:48:24"
                      }
                    ]
                  },
                  "id": 44580,
                  "nodeType": "IfStatement",
                  "src": "4405:873:24",
                  "trueBody": {
                    "id": 44540,
                    "nodeType": "Block",
                    "src": "4442:468:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 44493,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44399,
                                "src": "4513:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 44495,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 44494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4518:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4513:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 44498,
                                  "name": "_lpToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44391,
                                  "src": "4530:8:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4522:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44496,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4522:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4522:17:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44500,
                              "name": "lpBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44462,
                              "src": "4541:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 44492,
                            "name": "_checkAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44626,
                            "src": "4497:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 44501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4497:54:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44502,
                        "nodeType": "ExpressionStatement",
                        "src": "4497:54:24"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 44504,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44399,
                                    "src": "4577:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                      "typeString": "address[2] memory"
                                    }
                                  },
                                  "id": 44506,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 44505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4582:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4577:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44503,
                                "name": "IYearnVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44201,
                                "src": "4565:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IYearnVault_$44201_$",
                                  "typeString": "type(contract IYearnVault)"
                                }
                              },
                              "id": 44507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4565:20:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IYearnVault_$44201",
                                "typeString": "contract IYearnVault"
                              }
                            },
                            "id": 44508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4586:7:24",
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44200,
                            "src": "4565:28:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 44509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4565:30:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44510,
                        "nodeType": "ExpressionStatement",
                        "src": "4565:30:24"
                      },
                      {
                        "assignments": [
                          44512
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44512,
                            "mutability": "mutable",
                            "name": "_toTransfer",
                            "nameLocation": "4673:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 44540,
                            "src": "4665:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 44511,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4665:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 44521,
                        "initialValue": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "id": 44517,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4717:4:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                        "typeString": "contract MooVeloLpZapper"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                        "typeString": "contract MooVeloLpZapper"
                                      }
                                    ],
                                    "id": 44516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4709:7:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 44515,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4709:7:24",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 44518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4709:13:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 44519,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4708:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44513,
                              "name": "yearnToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44415,
                              "src": "4687:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$43539",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 44514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4698:9:24",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43496,
                            "src": "4687:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 44520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4687:37:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4665:59:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44525,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4762:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4766:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4762:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44527,
                              "name": "_toTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44512,
                              "src": "4774:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 44522,
                              "name": "yearnToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44415,
                              "src": "4738:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$43539",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 44524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4749:12:24",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43607,
                            "src": "4738:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43539_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43539_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 44528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4738:48:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44529,
                        "nodeType": "ExpressionStatement",
                        "src": "4738:48:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44531,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4811:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4815:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4811:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 44533,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44399,
                                "src": "4823:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 44535,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 44534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4828:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4823:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 44536,
                              "name": "_toTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44512,
                              "src": "4832:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 44537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4845:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 44530,
                            "name": "ZapIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44273,
                            "src": "4805:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 44538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4805:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44539,
                        "nodeType": "EmitStatement",
                        "src": "4800:51:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "510a3383",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zap",
            "nameLocation": "3582:3:24",
            "parameters": {
              "id": 44392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44391,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "3594:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44582,
                  "src": "3586:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3585:18:24"
            },
            "returnParameters": {
              "id": 44393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3613:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44626,
            "nodeType": "FunctionDefinition",
            "src": "5290:303:24",
            "nodes": [],
            "body": {
              "id": 44625,
              "nodeType": "Block",
              "src": "5376:217:24",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44597,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5423:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                "typeString": "contract MooVeloLpZapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MooVeloLpZapper_$44677",
                                "typeString": "contract MooVeloLpZapper"
                              }
                            ],
                            "id": 44596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5415:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5415:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5415:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 44599,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44584,
                          "src": "5430:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 44592,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44586,
                              "src": "5397:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 44591,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43539,
                            "src": "5390:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 44593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5390:14:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$43539",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 44594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5405:9:24",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43516,
                        "src": "5390:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 44600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5390:50:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 44601,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44588,
                      "src": "5443:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5390:60:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44624,
                  "nodeType": "IfStatement",
                  "src": "5386:201:24",
                  "trueBody": {
                    "id": 44623,
                    "nodeType": "Block",
                    "src": "5452:135:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44607,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44584,
                              "src": "5493:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 44608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5504:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44604,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44586,
                                  "src": "5473:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44603,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43539,
                                "src": "5466:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 44605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5466:14:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$43539",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 44606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5481:11:24",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43677,
                            "src": "5466:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43539_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43539_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 44609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5466:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44610,
                        "nodeType": "ExpressionStatement",
                        "src": "5466:40:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44615,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44584,
                              "src": "5547:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 44618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5563:7:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 44617,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5563:7:24",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 44616,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5558:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 44619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5558:13:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 44620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5572:3:24",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "5558:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 44612,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44586,
                                  "src": "5527:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 44611,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43539,
                                "src": "5520:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$43539_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 44613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5520:14:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$43539",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 44614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5535:11:24",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43677,
                            "src": "5520:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43539_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43539_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 44621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5520:56:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44622,
                        "nodeType": "ExpressionStatement",
                        "src": "5520:56:24"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkAllowance",
            "nameLocation": "5299:15:24",
            "parameters": {
              "id": 44589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44584,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "5323:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44626,
                  "src": "5315:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44586,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5342:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44626,
                  "src": "5334:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44588,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5358:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44626,
                  "src": "5350:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5314:52:24"
            },
            "returnParameters": {
              "id": 44590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44635,
            "nodeType": "FunctionDefinition",
            "src": "5638:97:24",
            "nodes": [],
            "body": {
              "id": 44634,
              "nodeType": "Block",
              "src": "5696:39:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44631,
                      "name": "lpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44242,
                      "src": "5713:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 44632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5722:6:24",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5713:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44630,
                  "id": 44633,
                  "nodeType": "Return",
                  "src": "5706:22:24"
                }
              ]
            },
            "functionSelector": "c9e4f07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumLpTokens",
            "nameLocation": "5647:14:24",
            "parameters": {
              "id": 44627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5661:2:24"
            },
            "returnParameters": {
              "id": 44630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44635,
                  "src": "5687:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5687:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5686:9:24"
            },
            "scope": 44677,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44657,
            "nodeType": "FunctionDefinition",
            "src": "6017:186:24",
            "nodes": [],
            "body": {
              "id": 44656,
              "nodeType": "Block",
              "src": "6095:108:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44645,
                        "name": "pairEndorsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44258,
                        "src": "6105:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 44647,
                      "indexExpression": {
                        "id": 44646,
                        "name": "_endorser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44638,
                        "src": "6119:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6105:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44648,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44640,
                      "src": "6132:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6105:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44650,
                  "nodeType": "ExpressionStatement",
                  "src": "6105:35:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44652,
                        "name": "_endorser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44638,
                        "src": "6176:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44653,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44640,
                        "src": "6187:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44651,
                      "name": "ApprovedPairEndorser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44293,
                      "src": "6155:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 44654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6155:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44655,
                  "nodeType": "EmitStatement",
                  "src": "6150:46:24"
                }
              ]
            },
            "documentation": {
              "id": 44636,
              "nodeType": "StructuredDocumentation",
              "src": "5789:223:24",
              "text": " @notice Set the ability of an address to endorse a pair.\n @dev Throws if caller is not owner.\n @param _endorser The address to approve or deny access.\n @param _allowed Allowed to endorse"
            },
            "functionSelector": "ad3d5870",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44642,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6085:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43380,
                  "src": "6085:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6085:9:24"
              }
            ],
            "name": "setPairEndorser",
            "nameLocation": "6026:15:24",
            "parameters": {
              "id": 44641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44638,
                  "mutability": "mutable",
                  "name": "_endorser",
                  "nameLocation": "6050:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44657,
                  "src": "6042:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44640,
                  "mutability": "mutable",
                  "name": "_allowed",
                  "nameLocation": "6066:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44657,
                  "src": "6061:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6061:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6041:34:24"
            },
            "returnParameters": {
              "id": 44644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6095:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44676,
            "nodeType": "FunctionDefinition",
            "src": "6400:171:24",
            "nodes": [],
            "body": {
              "id": 44675,
              "nodeType": "Block",
              "src": "6465:106:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44665,
                      "name": "boostZapContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44246,
                      "src": "6475:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IZap_$44232",
                        "typeString": "contract IZap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44667,
                          "name": "_boostZapContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44660,
                          "src": "6499:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44666,
                        "name": "IZap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44232,
                        "src": "6494:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IZap_$44232_$",
                          "typeString": "type(contract IZap)"
                        }
                      },
                      "id": 44668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6494:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IZap_$44232",
                        "typeString": "contract IZap"
                      }
                    },
                    "src": "6475:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IZap_$44232",
                      "typeString": "contract IZap"
                    }
                  },
                  "id": 44670,
                  "nodeType": "ExpressionStatement",
                  "src": "6475:42:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44672,
                        "name": "_boostZapContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44660,
                        "src": "6546:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44671,
                      "name": "UpdatedZapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44297,
                      "src": "6532:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6532:32:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44674,
                  "nodeType": "EmitStatement",
                  "src": "6527:37:24"
                }
              ]
            },
            "documentation": {
              "id": 44658,
              "nodeType": "StructuredDocumentation",
              "src": "6209:186:24",
              "text": " @notice Set the registry for pulling our staking pools.\n @dev Throws if caller is not owner.\n @param _boostZapContract The address to use as pool registry."
            },
            "functionSelector": "42435175",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44663,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44662,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6455:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43380,
                  "src": "6455:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6455:9:24"
              }
            ],
            "name": "setZapper",
            "nameLocation": "6409:9:24",
            "parameters": {
              "id": 44661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44660,
                  "mutability": "mutable",
                  "name": "_boostZapContract",
                  "nameLocation": "6427:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 44676,
                  "src": "6419:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6418:27:24"
            },
            "returnParameters": {
              "id": 44664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6465:0:24"
            },
            "scope": 44677,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44233,
              "name": "Ownable",
              "nameLocations": [
                "1013:7:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43461,
              "src": "1013:7:24"
            },
            "id": 44234,
            "nodeType": "InheritanceSpecifier",
            "src": "1013:7:24"
          }
        ],
        "canonicalName": "MooVeloLpZapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44677,
          43461,
          44173
        ],
        "name": "MooVeloLpZapper",
        "nameLocation": "994:15:24",
        "scope": 44678,
        "usedErrors": [],
        "usedEvents": [
          43362,
          44273,
          44281,
          44287,
          44293,
          44297
        ]
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 24
}